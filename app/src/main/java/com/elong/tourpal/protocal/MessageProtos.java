// Generated by the protocol buffer compiler.  DO NOT EDIT!

package com.elong.tourpal.protocal;

public final class MessageProtos {
  private MessageProtos() {}
  // enum ErrCode
  public static final int SUCCESS = 0;
  public static final int ERROR_DATA_ERROR = 1;
  public static final int ERROR_INFO_NOT_COMPLETE = 2;
  public static final int ERROR_NOT_LOGIN = 3;
  
  // enum PostStatus
  public static final int OPENED = 0;
  public static final int DELETED = 1;
  public static final int CLOSED = 2;
  
  // enum PushMsgType
  public static final int SYSTEM = 0;
  public static final int WANNA_JOIN = 1;
  
  @SuppressWarnings("hiding")
  public static final class RequestInfo extends
      com.google.protobuf.micro.MessageMicro {
    public RequestInfo() {}
    
    // required .ClientInfo client_info = 1;
    public static final int CLIENT_INFO_FIELD_NUMBER = 1;
    private boolean hasClientInfo;
    private ClientInfo clientInfo_ = null;
    public boolean hasClientInfo() { return hasClientInfo; }
    public ClientInfo getClientInfo() { return clientInfo_; }
    public RequestInfo setClientInfo(ClientInfo value) {
      if (value == null) {
        throw new NullPointerException();
      }
      hasClientInfo = true;
      clientInfo_ = value;
      return this;
    }
    public RequestInfo clearClientInfo() {
      hasClientInfo = false;
      clientInfo_ = null;
      return this;
    }
    
    // optional .LoginInfo login_info = 2;
    public static final int LOGIN_INFO_FIELD_NUMBER = 2;
    private boolean hasLoginInfo;
    private LoginInfo loginInfo_ = null;
    public boolean hasLoginInfo() { return hasLoginInfo; }
    public LoginInfo getLoginInfo() { return loginInfo_; }
    public RequestInfo setLoginInfo(LoginInfo value) {
      if (value == null) {
        throw new NullPointerException();
      }
      hasLoginInfo = true;
      loginInfo_ = value;
      return this;
    }
    public RequestInfo clearLoginInfo() {
      hasLoginInfo = false;
      loginInfo_ = null;
      return this;
    }
    
    // optional .PostByDestRequestInfo post_by_dest_info = 3;
    public static final int POST_BY_DEST_INFO_FIELD_NUMBER = 3;
    private boolean hasPostByDestInfo;
    private PostByDestRequestInfo postByDestInfo_ = null;
    public boolean hasPostByDestInfo() { return hasPostByDestInfo; }
    public PostByDestRequestInfo getPostByDestInfo() { return postByDestInfo_; }
    public RequestInfo setPostByDestInfo(PostByDestRequestInfo value) {
      if (value == null) {
        throw new NullPointerException();
      }
      hasPostByDestInfo = true;
      postByDestInfo_ = value;
      return this;
    }
    public RequestInfo clearPostByDestInfo() {
      hasPostByDestInfo = false;
      postByDestInfo_ = null;
      return this;
    }
    
    // optional .PostByUserRequestInfo post_by_user_info = 4;
    public static final int POST_BY_USER_INFO_FIELD_NUMBER = 4;
    private boolean hasPostByUserInfo;
    private PostByUserRequestInfo postByUserInfo_ = null;
    public boolean hasPostByUserInfo() { return hasPostByUserInfo; }
    public PostByUserRequestInfo getPostByUserInfo() { return postByUserInfo_; }
    public RequestInfo setPostByUserInfo(PostByUserRequestInfo value) {
      if (value == null) {
        throw new NullPointerException();
      }
      hasPostByUserInfo = true;
      postByUserInfo_ = value;
      return this;
    }
    public RequestInfo clearPostByUserInfo() {
      hasPostByUserInfo = false;
      postByUserInfo_ = null;
      return this;
    }
    
    // optional .PostRequestInfo post_req_info = 5;
    public static final int POST_REQ_INFO_FIELD_NUMBER = 5;
    private boolean hasPostReqInfo;
    private PostRequestInfo postReqInfo_ = null;
    public boolean hasPostReqInfo() { return hasPostReqInfo; }
    public PostRequestInfo getPostReqInfo() { return postReqInfo_; }
    public RequestInfo setPostReqInfo(PostRequestInfo value) {
      if (value == null) {
        throw new NullPointerException();
      }
      hasPostReqInfo = true;
      postReqInfo_ = value;
      return this;
    }
    public RequestInfo clearPostReqInfo() {
      hasPostReqInfo = false;
      postReqInfo_ = null;
      return this;
    }
    
    // optional string post_id = 6;
    public static final int POST_ID_FIELD_NUMBER = 6;
    private boolean hasPostId;
    private String postId_ = "";
    public String getPostId() { return postId_; }
    public boolean hasPostId() { return hasPostId; }
    public RequestInfo setPostId(String value) {
      hasPostId = true;
      postId_ = value;
      return this;
    }
    public RequestInfo clearPostId() {
      hasPostId = false;
      postId_ = "";
      return this;
    }
    
    // optional .UsersWannaJoinRequestInfo users_wanna_join_request_info = 7;
    public static final int USERS_WANNA_JOIN_REQUEST_INFO_FIELD_NUMBER = 7;
    private boolean hasUsersWannaJoinRequestInfo;
    private UsersWannaJoinRequestInfo usersWannaJoinRequestInfo_ = null;
    public boolean hasUsersWannaJoinRequestInfo() { return hasUsersWannaJoinRequestInfo; }
    public UsersWannaJoinRequestInfo getUsersWannaJoinRequestInfo() { return usersWannaJoinRequestInfo_; }
    public RequestInfo setUsersWannaJoinRequestInfo(UsersWannaJoinRequestInfo value) {
      if (value == null) {
        throw new NullPointerException();
      }
      hasUsersWannaJoinRequestInfo = true;
      usersWannaJoinRequestInfo_ = value;
      return this;
    }
    public RequestInfo clearUsersWannaJoinRequestInfo() {
      hasUsersWannaJoinRequestInfo = false;
      usersWannaJoinRequestInfo_ = null;
      return this;
    }
    
    // optional .UserInfo user_info = 8;
    public static final int USER_INFO_FIELD_NUMBER = 8;
    private boolean hasUserInfo;
    private UserInfo userInfo_ = null;
    public boolean hasUserInfo() { return hasUserInfo; }
    public UserInfo getUserInfo() { return userInfo_; }
    public RequestInfo setUserInfo(UserInfo value) {
      if (value == null) {
        throw new NullPointerException();
      }
      hasUserInfo = true;
      userInfo_ = value;
      return this;
    }
    public RequestInfo clearUserInfo() {
      hasUserInfo = false;
      userInfo_ = null;
      return this;
    }
    
    // optional string user_id = 9;
    public static final int USER_ID_FIELD_NUMBER = 9;
    private boolean hasUserId;
    private String userId_ = "";
    public String getUserId() { return userId_; }
    public boolean hasUserId() { return hasUserId; }
    public RequestInfo setUserId(String value) {
      hasUserId = true;
      userId_ = value;
      return this;
    }
    public RequestInfo clearUserId() {
      hasUserId = false;
      userId_ = "";
      return this;
    }
    
    // optional .WannaJoinRequest wanna_join_request = 10;
    public static final int WANNA_JOIN_REQUEST_FIELD_NUMBER = 10;
    private boolean hasWannaJoinRequest;
    private WannaJoinRequest wannaJoinRequest_ = null;
    public boolean hasWannaJoinRequest() { return hasWannaJoinRequest; }
    public WannaJoinRequest getWannaJoinRequest() { return wannaJoinRequest_; }
    public RequestInfo setWannaJoinRequest(WannaJoinRequest value) {
      if (value == null) {
        throw new NullPointerException();
      }
      hasWannaJoinRequest = true;
      wannaJoinRequest_ = value;
      return this;
    }
    public RequestInfo clearWannaJoinRequest() {
      hasWannaJoinRequest = false;
      wannaJoinRequest_ = null;
      return this;
    }
    
    // optional .DataUpdateRequestInfo data_update_request_info = 11;
    public static final int DATA_UPDATE_REQUEST_INFO_FIELD_NUMBER = 11;
    private boolean hasDataUpdateRequestInfo;
    private DataUpdateRequestInfo dataUpdateRequestInfo_ = null;
    public boolean hasDataUpdateRequestInfo() { return hasDataUpdateRequestInfo; }
    public DataUpdateRequestInfo getDataUpdateRequestInfo() { return dataUpdateRequestInfo_; }
    public RequestInfo setDataUpdateRequestInfo(DataUpdateRequestInfo value) {
      if (value == null) {
        throw new NullPointerException();
      }
      hasDataUpdateRequestInfo = true;
      dataUpdateRequestInfo_ = value;
      return this;
    }
    public RequestInfo clearDataUpdateRequestInfo() {
      hasDataUpdateRequestInfo = false;
      dataUpdateRequestInfo_ = null;
      return this;
    }
    
    // optional bytes img = 12;
    public static final int IMG_FIELD_NUMBER = 12;
    private boolean hasImg;
    private com.google.protobuf.micro.ByteStringMicro img_ = com.google.protobuf.micro.ByteStringMicro.EMPTY;
    public com.google.protobuf.micro.ByteStringMicro getImg() { return img_; }
    public boolean hasImg() { return hasImg; }
    public RequestInfo setImg(com.google.protobuf.micro.ByteStringMicro value) {
      hasImg = true;
      img_ = value;
      return this;
    }
    public RequestInfo clearImg() {
      hasImg = false;
      img_ = com.google.protobuf.micro.ByteStringMicro.EMPTY;
      return this;
    }
    
    // optional .Feedback feedback = 101;
    public static final int FEEDBACK_FIELD_NUMBER = 101;
    private boolean hasFeedback;
    private Feedback feedback_ = null;
    public boolean hasFeedback() { return hasFeedback; }
    public Feedback getFeedback() { return feedback_; }
    public RequestInfo setFeedback(Feedback value) {
      if (value == null) {
        throw new NullPointerException();
      }
      hasFeedback = true;
      feedback_ = value;
      return this;
    }
    public RequestInfo clearFeedback() {
      hasFeedback = false;
      feedback_ = null;
      return this;
    }
    
    // optional string statistics_data = 102;
    public static final int STATISTICS_DATA_FIELD_NUMBER = 102;
    private boolean hasStatisticsData;
    private String statisticsData_ = "";
    public String getStatisticsData() { return statisticsData_; }
    public boolean hasStatisticsData() { return hasStatisticsData; }
    public RequestInfo setStatisticsData(String value) {
      hasStatisticsData = true;
      statisticsData_ = value;
      return this;
    }
    public RequestInfo clearStatisticsData() {
      hasStatisticsData = false;
      statisticsData_ = "";
      return this;
    }
    
    // repeated int32 set_read_id = 100;
    public static final int SET_READ_ID_FIELD_NUMBER = 100;
    private java.util.List<Integer> setReadId_ =
      java.util.Collections.emptyList();
    public java.util.List<Integer> getSetReadIdList() {
      return setReadId_;
    }
    public int getSetReadIdCount() { return setReadId_.size(); }
    public int getSetReadId(int index) {
      return setReadId_.get(index);
    }
    public RequestInfo setSetReadId(int index, int value) {
      setReadId_.set(index, value);
      return this;
    }
    public RequestInfo addSetReadId(int value) {
      if (setReadId_.isEmpty()) {
        setReadId_ = new java.util.ArrayList<Integer>();
      }
      setReadId_.add(value);
      return this;
    }
    public RequestInfo clearSetReadId() {
      setReadId_ = java.util.Collections.emptyList();
      return this;
    }
    
    public final RequestInfo clear() {
      clearClientInfo();
      clearLoginInfo();
      clearPostByDestInfo();
      clearPostByUserInfo();
      clearPostReqInfo();
      clearPostId();
      clearUsersWannaJoinRequestInfo();
      clearUserInfo();
      clearUserId();
      clearWannaJoinRequest();
      clearDataUpdateRequestInfo();
      clearImg();
      clearFeedback();
      clearStatisticsData();
      clearSetReadId();
      cachedSize = -1;
      return this;
    }
    
    public final boolean isInitialized() {
      if (!hasClientInfo) return false;
      if (!getClientInfo().isInitialized()) return false;
      if (hasLoginInfo()) {
        if (!getLoginInfo().isInitialized()) return false;
      }
      if (hasPostByDestInfo()) {
        if (!getPostByDestInfo().isInitialized()) return false;
      }
      if (hasPostByUserInfo()) {
        if (!getPostByUserInfo().isInitialized()) return false;
      }
      if (hasPostReqInfo()) {
        if (!getPostReqInfo().isInitialized()) return false;
      }
      if (hasUsersWannaJoinRequestInfo()) {
        if (!getUsersWannaJoinRequestInfo().isInitialized()) return false;
      }
      if (hasUserInfo()) {
        if (!getUserInfo().isInitialized()) return false;
      }
      if (hasWannaJoinRequest()) {
        if (!getWannaJoinRequest().isInitialized()) return false;
      }
      if (hasFeedback()) {
        if (!getFeedback().isInitialized()) return false;
      }
      return true;
    }
    
    @Override
    public void writeTo(com.google.protobuf.micro.CodedOutputStreamMicro output)
                        throws java.io.IOException {
      if (hasClientInfo()) {
        output.writeMessage(1, getClientInfo());
      }
      if (hasLoginInfo()) {
        output.writeMessage(2, getLoginInfo());
      }
      if (hasPostByDestInfo()) {
        output.writeMessage(3, getPostByDestInfo());
      }
      if (hasPostByUserInfo()) {
        output.writeMessage(4, getPostByUserInfo());
      }
      if (hasPostReqInfo()) {
        output.writeMessage(5, getPostReqInfo());
      }
      if (hasPostId()) {
        output.writeString(6, getPostId());
      }
      if (hasUsersWannaJoinRequestInfo()) {
        output.writeMessage(7, getUsersWannaJoinRequestInfo());
      }
      if (hasUserInfo()) {
        output.writeMessage(8, getUserInfo());
      }
      if (hasUserId()) {
        output.writeString(9, getUserId());
      }
      if (hasWannaJoinRequest()) {
        output.writeMessage(10, getWannaJoinRequest());
      }
      if (hasDataUpdateRequestInfo()) {
        output.writeMessage(11, getDataUpdateRequestInfo());
      }
      if (hasImg()) {
        output.writeBytes(12, getImg());
      }
      for (int element : getSetReadIdList()) {
        output.writeInt32(100, element);
      }
      if (hasFeedback()) {
        output.writeMessage(101, getFeedback());
      }
      if (hasStatisticsData()) {
        output.writeString(102, getStatisticsData());
      }
    }
    
    private int cachedSize = -1;
    @Override
    public int getCachedSize() {
      if (cachedSize < 0) {
        // getSerializedSize sets cachedSize
        getSerializedSize();
      }
      return cachedSize;
    }
    
    @Override
    public int getSerializedSize() {
      int size = 0;
      if (hasClientInfo()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeMessageSize(1, getClientInfo());
      }
      if (hasLoginInfo()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeMessageSize(2, getLoginInfo());
      }
      if (hasPostByDestInfo()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeMessageSize(3, getPostByDestInfo());
      }
      if (hasPostByUserInfo()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeMessageSize(4, getPostByUserInfo());
      }
      if (hasPostReqInfo()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeMessageSize(5, getPostReqInfo());
      }
      if (hasPostId()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeStringSize(6, getPostId());
      }
      if (hasUsersWannaJoinRequestInfo()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeMessageSize(7, getUsersWannaJoinRequestInfo());
      }
      if (hasUserInfo()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeMessageSize(8, getUserInfo());
      }
      if (hasUserId()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeStringSize(9, getUserId());
      }
      if (hasWannaJoinRequest()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeMessageSize(10, getWannaJoinRequest());
      }
      if (hasDataUpdateRequestInfo()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeMessageSize(11, getDataUpdateRequestInfo());
      }
      if (hasImg()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeBytesSize(12, getImg());
      }
      {
        int dataSize = 0;
        for (int element : getSetReadIdList()) {
          dataSize += com.google.protobuf.micro.CodedOutputStreamMicro
            .computeInt32SizeNoTag(element);
        }
        size += dataSize;
        size += 2 * getSetReadIdList().size();
      }
      if (hasFeedback()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeMessageSize(101, getFeedback());
      }
      if (hasStatisticsData()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeStringSize(102, getStatisticsData());
      }
      cachedSize = size;
      return size;
    }
    
    @Override
    public RequestInfo mergeFrom(
        com.google.protobuf.micro.CodedInputStreamMicro input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            ClientInfo value = new ClientInfo();
            input.readMessage(value);
            setClientInfo(value);
            break;
          }
          case 18: {
            LoginInfo value = new LoginInfo();
            input.readMessage(value);
            setLoginInfo(value);
            break;
          }
          case 26: {
            PostByDestRequestInfo value = new PostByDestRequestInfo();
            input.readMessage(value);
            setPostByDestInfo(value);
            break;
          }
          case 34: {
            PostByUserRequestInfo value = new PostByUserRequestInfo();
            input.readMessage(value);
            setPostByUserInfo(value);
            break;
          }
          case 42: {
            PostRequestInfo value = new PostRequestInfo();
            input.readMessage(value);
            setPostReqInfo(value);
            break;
          }
          case 50: {
            setPostId(input.readString());
            break;
          }
          case 58: {
            UsersWannaJoinRequestInfo value = new UsersWannaJoinRequestInfo();
            input.readMessage(value);
            setUsersWannaJoinRequestInfo(value);
            break;
          }
          case 66: {
            UserInfo value = new UserInfo();
            input.readMessage(value);
            setUserInfo(value);
            break;
          }
          case 74: {
            setUserId(input.readString());
            break;
          }
          case 82: {
            WannaJoinRequest value = new WannaJoinRequest();
            input.readMessage(value);
            setWannaJoinRequest(value);
            break;
          }
          case 90: {
            DataUpdateRequestInfo value = new DataUpdateRequestInfo();
            input.readMessage(value);
            setDataUpdateRequestInfo(value);
            break;
          }
          case 98: {
            setImg(input.readBytes());
            break;
          }
          case 800: {
            addSetReadId(input.readInt32());
            break;
          }
          case 810: {
            Feedback value = new Feedback();
            input.readMessage(value);
            setFeedback(value);
            break;
          }
          case 818: {
            setStatisticsData(input.readString());
            break;
          }
        }
      }
    }
    
    public static RequestInfo parseFrom(byte[] data)
        throws com.google.protobuf.micro.InvalidProtocolBufferMicroException {
      return (RequestInfo) (new RequestInfo().mergeFrom(data));
    }
    
    public static RequestInfo parseFrom(
            com.google.protobuf.micro.CodedInputStreamMicro input)
        throws java.io.IOException {
      return new RequestInfo().mergeFrom(input);
    }
    
  }
  
  @SuppressWarnings("hiding")
  public static final class ClientInfo extends
      com.google.protobuf.micro.MessageMicro {
    public ClientInfo() {}
    
    // required string client_version = 1;
    public static final int CLIENT_VERSION_FIELD_NUMBER = 1;
    private boolean hasClientVersion;
    private String clientVersion_ = "";
    public String getClientVersion() { return clientVersion_; }
    public boolean hasClientVersion() { return hasClientVersion; }
    public ClientInfo setClientVersion(String value) {
      hasClientVersion = true;
      clientVersion_ = value;
      return this;
    }
    public ClientInfo clearClientVersion() {
      hasClientVersion = false;
      clientVersion_ = "";
      return this;
    }
    
    // required string build_brand = 2;
    public static final int BUILD_BRAND_FIELD_NUMBER = 2;
    private boolean hasBuildBrand;
    private String buildBrand_ = "";
    public String getBuildBrand() { return buildBrand_; }
    public boolean hasBuildBrand() { return hasBuildBrand; }
    public ClientInfo setBuildBrand(String value) {
      hasBuildBrand = true;
      buildBrand_ = value;
      return this;
    }
    public ClientInfo clearBuildBrand() {
      hasBuildBrand = false;
      buildBrand_ = "";
      return this;
    }
    
    // required string build_model = 3;
    public static final int BUILD_MODEL_FIELD_NUMBER = 3;
    private boolean hasBuildModel;
    private String buildModel_ = "";
    public String getBuildModel() { return buildModel_; }
    public boolean hasBuildModel() { return hasBuildModel; }
    public ClientInfo setBuildModel(String value) {
      hasBuildModel = true;
      buildModel_ = value;
      return this;
    }
    public ClientInfo clearBuildModel() {
      hasBuildModel = false;
      buildModel_ = "";
      return this;
    }
    
    // required string channel_id = 4;
    public static final int CHANNEL_ID_FIELD_NUMBER = 4;
    private boolean hasChannelId;
    private String channelId_ = "";
    public String getChannelId() { return channelId_; }
    public boolean hasChannelId() { return hasChannelId; }
    public ClientInfo setChannelId(String value) {
      hasChannelId = true;
      channelId_ = value;
      return this;
    }
    public ClientInfo clearChannelId() {
      hasChannelId = false;
      channelId_ = "";
      return this;
    }
    
    // required int32 version_code = 5;
    public static final int VERSION_CODE_FIELD_NUMBER = 5;
    private boolean hasVersionCode;
    private int versionCode_ = 0;
    public int getVersionCode() { return versionCode_; }
    public boolean hasVersionCode() { return hasVersionCode; }
    public ClientInfo setVersionCode(int value) {
      hasVersionCode = true;
      versionCode_ = value;
      return this;
    }
    public ClientInfo clearVersionCode() {
      hasVersionCode = false;
      versionCode_ = 0;
      return this;
    }
    
    // required string mid = 6;
    public static final int MID_FIELD_NUMBER = 6;
    private boolean hasMid;
    private String mid_ = "";
    public String getMid() { return mid_; }
    public boolean hasMid() { return hasMid; }
    public ClientInfo setMid(String value) {
      hasMid = true;
      mid_ = value;
      return this;
    }
    public ClientInfo clearMid() {
      hasMid = false;
      mid_ = "";
      return this;
    }
    
    public final ClientInfo clear() {
      clearClientVersion();
      clearBuildBrand();
      clearBuildModel();
      clearChannelId();
      clearVersionCode();
      clearMid();
      cachedSize = -1;
      return this;
    }
    
    public final boolean isInitialized() {
      if (!hasClientVersion) return false;
      if (!hasBuildBrand) return false;
      if (!hasBuildModel) return false;
      if (!hasChannelId) return false;
      if (!hasVersionCode) return false;
      if (!hasMid) return false;
      return true;
    }
    
    @Override
    public void writeTo(com.google.protobuf.micro.CodedOutputStreamMicro output)
                        throws java.io.IOException {
      if (hasClientVersion()) {
        output.writeString(1, getClientVersion());
      }
      if (hasBuildBrand()) {
        output.writeString(2, getBuildBrand());
      }
      if (hasBuildModel()) {
        output.writeString(3, getBuildModel());
      }
      if (hasChannelId()) {
        output.writeString(4, getChannelId());
      }
      if (hasVersionCode()) {
        output.writeInt32(5, getVersionCode());
      }
      if (hasMid()) {
        output.writeString(6, getMid());
      }
    }
    
    private int cachedSize = -1;
    @Override
    public int getCachedSize() {
      if (cachedSize < 0) {
        // getSerializedSize sets cachedSize
        getSerializedSize();
      }
      return cachedSize;
    }
    
    @Override
    public int getSerializedSize() {
      int size = 0;
      if (hasClientVersion()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeStringSize(1, getClientVersion());
      }
      if (hasBuildBrand()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeStringSize(2, getBuildBrand());
      }
      if (hasBuildModel()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeStringSize(3, getBuildModel());
      }
      if (hasChannelId()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeStringSize(4, getChannelId());
      }
      if (hasVersionCode()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeInt32Size(5, getVersionCode());
      }
      if (hasMid()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeStringSize(6, getMid());
      }
      cachedSize = size;
      return size;
    }
    
    @Override
    public ClientInfo mergeFrom(
        com.google.protobuf.micro.CodedInputStreamMicro input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            setClientVersion(input.readString());
            break;
          }
          case 18: {
            setBuildBrand(input.readString());
            break;
          }
          case 26: {
            setBuildModel(input.readString());
            break;
          }
          case 34: {
            setChannelId(input.readString());
            break;
          }
          case 40: {
            setVersionCode(input.readInt32());
            break;
          }
          case 50: {
            setMid(input.readString());
            break;
          }
        }
      }
    }
    
    public static ClientInfo parseFrom(byte[] data)
        throws com.google.protobuf.micro.InvalidProtocolBufferMicroException {
      return (ClientInfo) (new ClientInfo().mergeFrom(data));
    }
    
    public static ClientInfo parseFrom(
            com.google.protobuf.micro.CodedInputStreamMicro input)
        throws java.io.IOException {
      return new ClientInfo().mergeFrom(input);
    }
    
  }
  
  @SuppressWarnings("hiding")
  public static final class PostByDestRequestInfo extends
      com.google.protobuf.micro.MessageMicro {
    public PostByDestRequestInfo() {}
    
    // required .PageRequestInfo page_request_info = 1;
    public static final int PAGE_REQUEST_INFO_FIELD_NUMBER = 1;
    private boolean hasPageRequestInfo;
    private PageRequestInfo pageRequestInfo_ = null;
    public boolean hasPageRequestInfo() { return hasPageRequestInfo; }
    public PageRequestInfo getPageRequestInfo() { return pageRequestInfo_; }
    public PostByDestRequestInfo setPageRequestInfo(PageRequestInfo value) {
      if (value == null) {
        throw new NullPointerException();
      }
      hasPageRequestInfo = true;
      pageRequestInfo_ = value;
      return this;
    }
    public PostByDestRequestInfo clearPageRequestInfo() {
      hasPageRequestInfo = false;
      pageRequestInfo_ = null;
      return this;
    }
    
    // required string dest = 2;
    public static final int DEST_FIELD_NUMBER = 2;
    private boolean hasDest;
    private String dest_ = "";
    public String getDest() { return dest_; }
    public boolean hasDest() { return hasDest; }
    public PostByDestRequestInfo setDest(String value) {
      hasDest = true;
      dest_ = value;
      return this;
    }
    public PostByDestRequestInfo clearDest() {
      hasDest = false;
      dest_ = "";
      return this;
    }
    
    public final PostByDestRequestInfo clear() {
      clearPageRequestInfo();
      clearDest();
      cachedSize = -1;
      return this;
    }
    
    public final boolean isInitialized() {
      if (!hasPageRequestInfo) return false;
      if (!hasDest) return false;
      if (!getPageRequestInfo().isInitialized()) return false;
      return true;
    }
    
    @Override
    public void writeTo(com.google.protobuf.micro.CodedOutputStreamMicro output)
                        throws java.io.IOException {
      if (hasPageRequestInfo()) {
        output.writeMessage(1, getPageRequestInfo());
      }
      if (hasDest()) {
        output.writeString(2, getDest());
      }
    }
    
    private int cachedSize = -1;
    @Override
    public int getCachedSize() {
      if (cachedSize < 0) {
        // getSerializedSize sets cachedSize
        getSerializedSize();
      }
      return cachedSize;
    }
    
    @Override
    public int getSerializedSize() {
      int size = 0;
      if (hasPageRequestInfo()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeMessageSize(1, getPageRequestInfo());
      }
      if (hasDest()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeStringSize(2, getDest());
      }
      cachedSize = size;
      return size;
    }
    
    @Override
    public PostByDestRequestInfo mergeFrom(
        com.google.protobuf.micro.CodedInputStreamMicro input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            PageRequestInfo value = new PageRequestInfo();
            input.readMessage(value);
            setPageRequestInfo(value);
            break;
          }
          case 18: {
            setDest(input.readString());
            break;
          }
        }
      }
    }
    
    public static PostByDestRequestInfo parseFrom(byte[] data)
        throws com.google.protobuf.micro.InvalidProtocolBufferMicroException {
      return (PostByDestRequestInfo) (new PostByDestRequestInfo().mergeFrom(data));
    }
    
    public static PostByDestRequestInfo parseFrom(
            com.google.protobuf.micro.CodedInputStreamMicro input)
        throws java.io.IOException {
      return new PostByDestRequestInfo().mergeFrom(input);
    }
    
  }
  
  @SuppressWarnings("hiding")
  public static final class PostByUserRequestInfo extends
      com.google.protobuf.micro.MessageMicro {
    public PostByUserRequestInfo() {}
    
    // required .PageRequestInfo page_request_info = 1;
    public static final int PAGE_REQUEST_INFO_FIELD_NUMBER = 1;
    private boolean hasPageRequestInfo;
    private PageRequestInfo pageRequestInfo_ = null;
    public boolean hasPageRequestInfo() { return hasPageRequestInfo; }
    public PageRequestInfo getPageRequestInfo() { return pageRequestInfo_; }
    public PostByUserRequestInfo setPageRequestInfo(PageRequestInfo value) {
      if (value == null) {
        throw new NullPointerException();
      }
      hasPageRequestInfo = true;
      pageRequestInfo_ = value;
      return this;
    }
    public PostByUserRequestInfo clearPageRequestInfo() {
      hasPageRequestInfo = false;
      pageRequestInfo_ = null;
      return this;
    }
    
    // optional string uid = 2;
    public static final int UID_FIELD_NUMBER = 2;
    private boolean hasUid;
    private String uid_ = "";
    public String getUid() { return uid_; }
    public boolean hasUid() { return hasUid; }
    public PostByUserRequestInfo setUid(String value) {
      hasUid = true;
      uid_ = value;
      return this;
    }
    public PostByUserRequestInfo clearUid() {
      hasUid = false;
      uid_ = "";
      return this;
    }
    
    public final PostByUserRequestInfo clear() {
      clearPageRequestInfo();
      clearUid();
      cachedSize = -1;
      return this;
    }
    
    public final boolean isInitialized() {
      if (!hasPageRequestInfo) return false;
      if (!getPageRequestInfo().isInitialized()) return false;
      return true;
    }
    
    @Override
    public void writeTo(com.google.protobuf.micro.CodedOutputStreamMicro output)
                        throws java.io.IOException {
      if (hasPageRequestInfo()) {
        output.writeMessage(1, getPageRequestInfo());
      }
      if (hasUid()) {
        output.writeString(2, getUid());
      }
    }
    
    private int cachedSize = -1;
    @Override
    public int getCachedSize() {
      if (cachedSize < 0) {
        // getSerializedSize sets cachedSize
        getSerializedSize();
      }
      return cachedSize;
    }
    
    @Override
    public int getSerializedSize() {
      int size = 0;
      if (hasPageRequestInfo()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeMessageSize(1, getPageRequestInfo());
      }
      if (hasUid()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeStringSize(2, getUid());
      }
      cachedSize = size;
      return size;
    }
    
    @Override
    public PostByUserRequestInfo mergeFrom(
        com.google.protobuf.micro.CodedInputStreamMicro input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            PageRequestInfo value = new PageRequestInfo();
            input.readMessage(value);
            setPageRequestInfo(value);
            break;
          }
          case 18: {
            setUid(input.readString());
            break;
          }
        }
      }
    }
    
    public static PostByUserRequestInfo parseFrom(byte[] data)
        throws com.google.protobuf.micro.InvalidProtocolBufferMicroException {
      return (PostByUserRequestInfo) (new PostByUserRequestInfo().mergeFrom(data));
    }
    
    public static PostByUserRequestInfo parseFrom(
            com.google.protobuf.micro.CodedInputStreamMicro input)
        throws java.io.IOException {
      return new PostByUserRequestInfo().mergeFrom(input);
    }
    
  }
  
  @SuppressWarnings("hiding")
  public static final class UsersWannaJoinRequestInfo extends
      com.google.protobuf.micro.MessageMicro {
    public UsersWannaJoinRequestInfo() {}
    
    // required .PageRequestInfo page_request_info = 1;
    public static final int PAGE_REQUEST_INFO_FIELD_NUMBER = 1;
    private boolean hasPageRequestInfo;
    private PageRequestInfo pageRequestInfo_ = null;
    public boolean hasPageRequestInfo() { return hasPageRequestInfo; }
    public PageRequestInfo getPageRequestInfo() { return pageRequestInfo_; }
    public UsersWannaJoinRequestInfo setPageRequestInfo(PageRequestInfo value) {
      if (value == null) {
        throw new NullPointerException();
      }
      hasPageRequestInfo = true;
      pageRequestInfo_ = value;
      return this;
    }
    public UsersWannaJoinRequestInfo clearPageRequestInfo() {
      hasPageRequestInfo = false;
      pageRequestInfo_ = null;
      return this;
    }
    
    // optional string post_id = 2;
    public static final int POST_ID_FIELD_NUMBER = 2;
    private boolean hasPostId;
    private String postId_ = "";
    public String getPostId() { return postId_; }
    public boolean hasPostId() { return hasPostId; }
    public UsersWannaJoinRequestInfo setPostId(String value) {
      hasPostId = true;
      postId_ = value;
      return this;
    }
    public UsersWannaJoinRequestInfo clearPostId() {
      hasPostId = false;
      postId_ = "";
      return this;
    }
    
    public final UsersWannaJoinRequestInfo clear() {
      clearPageRequestInfo();
      clearPostId();
      cachedSize = -1;
      return this;
    }
    
    public final boolean isInitialized() {
      if (!hasPageRequestInfo) return false;
      if (!getPageRequestInfo().isInitialized()) return false;
      return true;
    }
    
    @Override
    public void writeTo(com.google.protobuf.micro.CodedOutputStreamMicro output)
                        throws java.io.IOException {
      if (hasPageRequestInfo()) {
        output.writeMessage(1, getPageRequestInfo());
      }
      if (hasPostId()) {
        output.writeString(2, getPostId());
      }
    }
    
    private int cachedSize = -1;
    @Override
    public int getCachedSize() {
      if (cachedSize < 0) {
        // getSerializedSize sets cachedSize
        getSerializedSize();
      }
      return cachedSize;
    }
    
    @Override
    public int getSerializedSize() {
      int size = 0;
      if (hasPageRequestInfo()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeMessageSize(1, getPageRequestInfo());
      }
      if (hasPostId()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeStringSize(2, getPostId());
      }
      cachedSize = size;
      return size;
    }
    
    @Override
    public UsersWannaJoinRequestInfo mergeFrom(
        com.google.protobuf.micro.CodedInputStreamMicro input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            PageRequestInfo value = new PageRequestInfo();
            input.readMessage(value);
            setPageRequestInfo(value);
            break;
          }
          case 18: {
            setPostId(input.readString());
            break;
          }
        }
      }
    }
    
    public static UsersWannaJoinRequestInfo parseFrom(byte[] data)
        throws com.google.protobuf.micro.InvalidProtocolBufferMicroException {
      return (UsersWannaJoinRequestInfo) (new UsersWannaJoinRequestInfo().mergeFrom(data));
    }
    
    public static UsersWannaJoinRequestInfo parseFrom(
            com.google.protobuf.micro.CodedInputStreamMicro input)
        throws java.io.IOException {
      return new UsersWannaJoinRequestInfo().mergeFrom(input);
    }
    
  }
  
  @SuppressWarnings("hiding")
  public static final class PostRequestInfo extends
      com.google.protobuf.micro.MessageMicro {
    public PostRequestInfo() {}
    
    // required string start_time = 1;
    public static final int START_TIME_FIELD_NUMBER = 1;
    private boolean hasStartTime;
    private String startTime_ = "";
    public String getStartTime() { return startTime_; }
    public boolean hasStartTime() { return hasStartTime; }
    public PostRequestInfo setStartTime(String value) {
      hasStartTime = true;
      startTime_ = value;
      return this;
    }
    public PostRequestInfo clearStartTime() {
      hasStartTime = false;
      startTime_ = "";
      return this;
    }
    
    // required int32 duration = 2;
    public static final int DURATION_FIELD_NUMBER = 2;
    private boolean hasDuration;
    private int duration_ = 0;
    public int getDuration() { return duration_; }
    public boolean hasDuration() { return hasDuration; }
    public PostRequestInfo setDuration(int value) {
      hasDuration = true;
      duration_ = value;
      return this;
    }
    public PostRequestInfo clearDuration() {
      hasDuration = false;
      duration_ = 0;
      return this;
    }
    
    // required string weixin = 3;
    public static final int WEIXIN_FIELD_NUMBER = 3;
    private boolean hasWeixin;
    private String weixin_ = "";
    public String getWeixin() { return weixin_; }
    public boolean hasWeixin() { return hasWeixin; }
    public PostRequestInfo setWeixin(String value) {
      hasWeixin = true;
      weixin_ = value;
      return this;
    }
    public PostRequestInfo clearWeixin() {
      hasWeixin = false;
      weixin_ = "";
      return this;
    }
    
    // required string qq = 4;
    public static final int QQ_FIELD_NUMBER = 4;
    private boolean hasQq;
    private String qq_ = "";
    public String getQq() { return qq_; }
    public boolean hasQq() { return hasQq; }
    public PostRequestInfo setQq(String value) {
      hasQq = true;
      qq_ = value;
      return this;
    }
    public PostRequestInfo clearQq() {
      hasQq = false;
      qq_ = "";
      return this;
    }
    
    // required string phone = 5;
    public static final int PHONE_FIELD_NUMBER = 5;
    private boolean hasPhone;
    private String phone_ = "";
    public String getPhone() { return phone_; }
    public boolean hasPhone() { return hasPhone; }
    public PostRequestInfo setPhone(String value) {
      hasPhone = true;
      phone_ = value;
      return this;
    }
    public PostRequestInfo clearPhone() {
      hasPhone = false;
      phone_ = "";
      return this;
    }
    
    // required string content = 6;
    public static final int CONTENT_FIELD_NUMBER = 6;
    private boolean hasContent;
    private String content_ = "";
    public String getContent() { return content_; }
    public boolean hasContent() { return hasContent; }
    public PostRequestInfo setContent(String value) {
      hasContent = true;
      content_ = value;
      return this;
    }
    public PostRequestInfo clearContent() {
      hasContent = false;
      content_ = "";
      return this;
    }
    
    // optional string post_place = 7;
    public static final int POST_PLACE_FIELD_NUMBER = 7;
    private boolean hasPostPlace;
    private String postPlace_ = "";
    public String getPostPlace() { return postPlace_; }
    public boolean hasPostPlace() { return hasPostPlace; }
    public PostRequestInfo setPostPlace(String value) {
      hasPostPlace = true;
      postPlace_ = value;
      return this;
    }
    public PostRequestInfo clearPostPlace() {
      hasPostPlace = false;
      postPlace_ = "";
      return this;
    }
    
    // repeated bytes imgs = 100;
    public static final int IMGS_FIELD_NUMBER = 100;
    private java.util.List<com.google.protobuf.micro.ByteStringMicro> imgs_ =
      java.util.Collections.emptyList();
    public java.util.List<com.google.protobuf.micro.ByteStringMicro> getImgsList() {
      return imgs_;
    }
    public int getImgsCount() { return imgs_.size(); }
    public com.google.protobuf.micro.ByteStringMicro getImgs(int index) {
      return imgs_.get(index);
    }
    public PostRequestInfo setImgs(int index, com.google.protobuf.micro.ByteStringMicro value) {
      if (value == null) {
    throw new NullPointerException();
  }
  imgs_.set(index, value);
      return this;
    }
    public PostRequestInfo addImgs(com.google.protobuf.micro.ByteStringMicro value) {
      if (value == null) {
    throw new NullPointerException();
  }
  if (imgs_.isEmpty()) {
        imgs_ = new java.util.ArrayList<com.google.protobuf.micro.ByteStringMicro>();
      }
      imgs_.add(value);
      return this;
    }
    public PostRequestInfo clearImgs() {
      imgs_ = java.util.Collections.emptyList();
      return this;
    }
    
    // repeated .DestInfo dest_info = 101;
    public static final int DEST_INFO_FIELD_NUMBER = 101;
    private java.util.List<DestInfo> destInfo_ =
      java.util.Collections.emptyList();
    public java.util.List<DestInfo> getDestInfoList() {
      return destInfo_;
    }
    public int getDestInfoCount() { return destInfo_.size(); }
    public DestInfo getDestInfo(int index) {
      return destInfo_.get(index);
    }
    public PostRequestInfo setDestInfo(int index, DestInfo value) {
      if (value == null) {
        throw new NullPointerException();
      }
      destInfo_.set(index, value);
      return this;
    }
    public PostRequestInfo addDestInfo(DestInfo value) {
      if (value == null) {
        throw new NullPointerException();
      }
      if (destInfo_.isEmpty()) {
        destInfo_ = new java.util.ArrayList<DestInfo>();
      }
      destInfo_.add(value);
      return this;
    }
    public PostRequestInfo clearDestInfo() {
      destInfo_ = java.util.Collections.emptyList();
      return this;
    }
    
    // repeated string post_tag = 102;
    public static final int POST_TAG_FIELD_NUMBER = 102;
    private java.util.List<String> postTag_ =
      java.util.Collections.emptyList();
    public java.util.List<String> getPostTagList() {
      return postTag_;
    }
    public int getPostTagCount() { return postTag_.size(); }
    public String getPostTag(int index) {
      return postTag_.get(index);
    }
    public PostRequestInfo setPostTag(int index, String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  postTag_.set(index, value);
      return this;
    }
    public PostRequestInfo addPostTag(String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  if (postTag_.isEmpty()) {
        postTag_ = new java.util.ArrayList<String>();
      }
      postTag_.add(value);
      return this;
    }
    public PostRequestInfo clearPostTag() {
      postTag_ = java.util.Collections.emptyList();
      return this;
    }
    
    public final PostRequestInfo clear() {
      clearStartTime();
      clearDuration();
      clearWeixin();
      clearQq();
      clearPhone();
      clearContent();
      clearPostPlace();
      clearImgs();
      clearDestInfo();
      clearPostTag();
      cachedSize = -1;
      return this;
    }
    
    public final boolean isInitialized() {
      if (!hasStartTime) return false;
      if (!hasDuration) return false;
      if (!hasWeixin) return false;
      if (!hasQq) return false;
      if (!hasPhone) return false;
      if (!hasContent) return false;
      for (DestInfo element : getDestInfoList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }
    
    @Override
    public void writeTo(com.google.protobuf.micro.CodedOutputStreamMicro output)
                        throws java.io.IOException {
      if (hasStartTime()) {
        output.writeString(1, getStartTime());
      }
      if (hasDuration()) {
        output.writeInt32(2, getDuration());
      }
      if (hasWeixin()) {
        output.writeString(3, getWeixin());
      }
      if (hasQq()) {
        output.writeString(4, getQq());
      }
      if (hasPhone()) {
        output.writeString(5, getPhone());
      }
      if (hasContent()) {
        output.writeString(6, getContent());
      }
      if (hasPostPlace()) {
        output.writeString(7, getPostPlace());
      }
      for (com.google.protobuf.micro.ByteStringMicro element : getImgsList()) {
        output.writeBytes(100, element);
      }
      for (DestInfo element : getDestInfoList()) {
        output.writeMessage(101, element);
      }
      for (String element : getPostTagList()) {
        output.writeString(102, element);
      }
    }
    
    private int cachedSize = -1;
    @Override
    public int getCachedSize() {
      if (cachedSize < 0) {
        // getSerializedSize sets cachedSize
        getSerializedSize();
      }
      return cachedSize;
    }
    
    @Override
    public int getSerializedSize() {
      int size = 0;
      if (hasStartTime()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeStringSize(1, getStartTime());
      }
      if (hasDuration()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeInt32Size(2, getDuration());
      }
      if (hasWeixin()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeStringSize(3, getWeixin());
      }
      if (hasQq()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeStringSize(4, getQq());
      }
      if (hasPhone()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeStringSize(5, getPhone());
      }
      if (hasContent()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeStringSize(6, getContent());
      }
      if (hasPostPlace()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeStringSize(7, getPostPlace());
      }
      {
        int dataSize = 0;
        for (com.google.protobuf.micro.ByteStringMicro element : getImgsList()) {
          dataSize += com.google.protobuf.micro.CodedOutputStreamMicro
            .computeBytesSizeNoTag(element);
        }
        size += dataSize;
        size += 2 * getImgsList().size();
      }
      for (DestInfo element : getDestInfoList()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeMessageSize(101, element);
      }
      {
        int dataSize = 0;
        for (String element : getPostTagList()) {
          dataSize += com.google.protobuf.micro.CodedOutputStreamMicro
            .computeStringSizeNoTag(element);
        }
        size += dataSize;
        size += 2 * getPostTagList().size();
      }
      cachedSize = size;
      return size;
    }
    
    @Override
    public PostRequestInfo mergeFrom(
        com.google.protobuf.micro.CodedInputStreamMicro input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            setStartTime(input.readString());
            break;
          }
          case 16: {
            setDuration(input.readInt32());
            break;
          }
          case 26: {
            setWeixin(input.readString());
            break;
          }
          case 34: {
            setQq(input.readString());
            break;
          }
          case 42: {
            setPhone(input.readString());
            break;
          }
          case 50: {
            setContent(input.readString());
            break;
          }
          case 58: {
            setPostPlace(input.readString());
            break;
          }
          case 802: {
            addImgs(input.readBytes());
            break;
          }
          case 810: {
            DestInfo value = new DestInfo();
            input.readMessage(value);
            addDestInfo(value);
            break;
          }
          case 818: {
            addPostTag(input.readString());
            break;
          }
        }
      }
    }
    
    public static PostRequestInfo parseFrom(byte[] data)
        throws com.google.protobuf.micro.InvalidProtocolBufferMicroException {
      return (PostRequestInfo) (new PostRequestInfo().mergeFrom(data));
    }
    
    public static PostRequestInfo parseFrom(
            com.google.protobuf.micro.CodedInputStreamMicro input)
        throws java.io.IOException {
      return new PostRequestInfo().mergeFrom(input);
    }
    
  }
  
  @SuppressWarnings("hiding")
  public static final class DestInfo extends
      com.google.protobuf.micro.MessageMicro {
    public DestInfo() {}
    
    // required string dest = 1;
    public static final int DEST_FIELD_NUMBER = 1;
    private boolean hasDest;
    private String dest_ = "";
    public String getDest() { return dest_; }
    public boolean hasDest() { return hasDest; }
    public DestInfo setDest(String value) {
      hasDest = true;
      dest_ = value;
      return this;
    }
    public DestInfo clearDest() {
      hasDest = false;
      dest_ = "";
      return this;
    }
    
    // optional int32 dest_id = 2;
    public static final int DEST_ID_FIELD_NUMBER = 2;
    private boolean hasDestId;
    private int destId_ = 0;
    public int getDestId() { return destId_; }
    public boolean hasDestId() { return hasDestId; }
    public DestInfo setDestId(int value) {
      hasDestId = true;
      destId_ = value;
      return this;
    }
    public DestInfo clearDestId() {
      hasDestId = false;
      destId_ = 0;
      return this;
    }
    
    public final DestInfo clear() {
      clearDest();
      clearDestId();
      cachedSize = -1;
      return this;
    }
    
    public final boolean isInitialized() {
      if (!hasDest) return false;
      return true;
    }
    
    @Override
    public void writeTo(com.google.protobuf.micro.CodedOutputStreamMicro output)
                        throws java.io.IOException {
      if (hasDest()) {
        output.writeString(1, getDest());
      }
      if (hasDestId()) {
        output.writeInt32(2, getDestId());
      }
    }
    
    private int cachedSize = -1;
    @Override
    public int getCachedSize() {
      if (cachedSize < 0) {
        // getSerializedSize sets cachedSize
        getSerializedSize();
      }
      return cachedSize;
    }
    
    @Override
    public int getSerializedSize() {
      int size = 0;
      if (hasDest()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeStringSize(1, getDest());
      }
      if (hasDestId()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeInt32Size(2, getDestId());
      }
      cachedSize = size;
      return size;
    }
    
    @Override
    public DestInfo mergeFrom(
        com.google.protobuf.micro.CodedInputStreamMicro input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            setDest(input.readString());
            break;
          }
          case 16: {
            setDestId(input.readInt32());
            break;
          }
        }
      }
    }
    
    public static DestInfo parseFrom(byte[] data)
        throws com.google.protobuf.micro.InvalidProtocolBufferMicroException {
      return (DestInfo) (new DestInfo().mergeFrom(data));
    }
    
    public static DestInfo parseFrom(
            com.google.protobuf.micro.CodedInputStreamMicro input)
        throws java.io.IOException {
      return new DestInfo().mergeFrom(input);
    }
    
  }
  
  @SuppressWarnings("hiding")
  public static final class LoginInfo extends
      com.google.protobuf.micro.MessageMicro {
    public LoginInfo() {}
    
    // required string session_id = 1;
    public static final int SESSION_ID_FIELD_NUMBER = 1;
    private boolean hasSessionId;
    private String sessionId_ = "";
    public String getSessionId() { return sessionId_; }
    public boolean hasSessionId() { return hasSessionId; }
    public LoginInfo setSessionId(String value) {
      hasSessionId = true;
      sessionId_ = value;
      return this;
    }
    public LoginInfo clearSessionId() {
      hasSessionId = false;
      sessionId_ = "";
      return this;
    }
    
    // required string session_token = 2;
    public static final int SESSION_TOKEN_FIELD_NUMBER = 2;
    private boolean hasSessionToken;
    private String sessionToken_ = "";
    public String getSessionToken() { return sessionToken_; }
    public boolean hasSessionToken() { return hasSessionToken; }
    public LoginInfo setSessionToken(String value) {
      hasSessionToken = true;
      sessionToken_ = value;
      return this;
    }
    public LoginInfo clearSessionToken() {
      hasSessionToken = false;
      sessionToken_ = "";
      return this;
    }
    
    // optional string push_client_id = 3;
    public static final int PUSH_CLIENT_ID_FIELD_NUMBER = 3;
    private boolean hasPushClientId;
    private String pushClientId_ = "";
    public String getPushClientId() { return pushClientId_; }
    public boolean hasPushClientId() { return hasPushClientId; }
    public LoginInfo setPushClientId(String value) {
      hasPushClientId = true;
      pushClientId_ = value;
      return this;
    }
    public LoginInfo clearPushClientId() {
      hasPushClientId = false;
      pushClientId_ = "";
      return this;
    }
    
    public final LoginInfo clear() {
      clearSessionId();
      clearSessionToken();
      clearPushClientId();
      cachedSize = -1;
      return this;
    }
    
    public final boolean isInitialized() {
      if (!hasSessionId) return false;
      if (!hasSessionToken) return false;
      return true;
    }
    
    @Override
    public void writeTo(com.google.protobuf.micro.CodedOutputStreamMicro output)
                        throws java.io.IOException {
      if (hasSessionId()) {
        output.writeString(1, getSessionId());
      }
      if (hasSessionToken()) {
        output.writeString(2, getSessionToken());
      }
      if (hasPushClientId()) {
        output.writeString(3, getPushClientId());
      }
    }
    
    private int cachedSize = -1;
    @Override
    public int getCachedSize() {
      if (cachedSize < 0) {
        // getSerializedSize sets cachedSize
        getSerializedSize();
      }
      return cachedSize;
    }
    
    @Override
    public int getSerializedSize() {
      int size = 0;
      if (hasSessionId()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeStringSize(1, getSessionId());
      }
      if (hasSessionToken()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeStringSize(2, getSessionToken());
      }
      if (hasPushClientId()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeStringSize(3, getPushClientId());
      }
      cachedSize = size;
      return size;
    }
    
    @Override
    public LoginInfo mergeFrom(
        com.google.protobuf.micro.CodedInputStreamMicro input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            setSessionId(input.readString());
            break;
          }
          case 18: {
            setSessionToken(input.readString());
            break;
          }
          case 26: {
            setPushClientId(input.readString());
            break;
          }
        }
      }
    }
    
    public static LoginInfo parseFrom(byte[] data)
        throws com.google.protobuf.micro.InvalidProtocolBufferMicroException {
      return (LoginInfo) (new LoginInfo().mergeFrom(data));
    }
    
    public static LoginInfo parseFrom(
            com.google.protobuf.micro.CodedInputStreamMicro input)
        throws java.io.IOException {
      return new LoginInfo().mergeFrom(input);
    }
    
  }
  
  @SuppressWarnings("hiding")
  public static final class PageRequestInfo extends
      com.google.protobuf.micro.MessageMicro {
    public PageRequestInfo() {}
    
    // required int32 num_per_page = 1;
    public static final int NUM_PER_PAGE_FIELD_NUMBER = 1;
    private boolean hasNumPerPage;
    private int numPerPage_ = 0;
    public int getNumPerPage() { return numPerPage_; }
    public boolean hasNumPerPage() { return hasNumPerPage; }
    public PageRequestInfo setNumPerPage(int value) {
      hasNumPerPage = true;
      numPerPage_ = value;
      return this;
    }
    public PageRequestInfo clearNumPerPage() {
      hasNumPerPage = false;
      numPerPage_ = 0;
      return this;
    }
    
    // required int32 start_offset = 2;
    public static final int START_OFFSET_FIELD_NUMBER = 2;
    private boolean hasStartOffset;
    private int startOffset_ = 0;
    public int getStartOffset() { return startOffset_; }
    public boolean hasStartOffset() { return hasStartOffset; }
    public PageRequestInfo setStartOffset(int value) {
      hasStartOffset = true;
      startOffset_ = value;
      return this;
    }
    public PageRequestInfo clearStartOffset() {
      hasStartOffset = false;
      startOffset_ = 0;
      return this;
    }
    
    public final PageRequestInfo clear() {
      clearNumPerPage();
      clearStartOffset();
      cachedSize = -1;
      return this;
    }
    
    public final boolean isInitialized() {
      if (!hasNumPerPage) return false;
      if (!hasStartOffset) return false;
      return true;
    }
    
    @Override
    public void writeTo(com.google.protobuf.micro.CodedOutputStreamMicro output)
                        throws java.io.IOException {
      if (hasNumPerPage()) {
        output.writeInt32(1, getNumPerPage());
      }
      if (hasStartOffset()) {
        output.writeInt32(2, getStartOffset());
      }
    }
    
    private int cachedSize = -1;
    @Override
    public int getCachedSize() {
      if (cachedSize < 0) {
        // getSerializedSize sets cachedSize
        getSerializedSize();
      }
      return cachedSize;
    }
    
    @Override
    public int getSerializedSize() {
      int size = 0;
      if (hasNumPerPage()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeInt32Size(1, getNumPerPage());
      }
      if (hasStartOffset()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeInt32Size(2, getStartOffset());
      }
      cachedSize = size;
      return size;
    }
    
    @Override
    public PageRequestInfo mergeFrom(
        com.google.protobuf.micro.CodedInputStreamMicro input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            setNumPerPage(input.readInt32());
            break;
          }
          case 16: {
            setStartOffset(input.readInt32());
            break;
          }
        }
      }
    }
    
    public static PageRequestInfo parseFrom(byte[] data)
        throws com.google.protobuf.micro.InvalidProtocolBufferMicroException {
      return (PageRequestInfo) (new PageRequestInfo().mergeFrom(data));
    }
    
    public static PageRequestInfo parseFrom(
            com.google.protobuf.micro.CodedInputStreamMicro input)
        throws java.io.IOException {
      return new PageRequestInfo().mergeFrom(input);
    }
    
  }
  
  @SuppressWarnings("hiding")
  public static final class WannaJoinRequest extends
      com.google.protobuf.micro.MessageMicro {
    public WannaJoinRequest() {}
    
    // required string post_id = 1;
    public static final int POST_ID_FIELD_NUMBER = 1;
    private boolean hasPostId;
    private String postId_ = "";
    public String getPostId() { return postId_; }
    public boolean hasPostId() { return hasPostId; }
    public WannaJoinRequest setPostId(String value) {
      hasPostId = true;
      postId_ = value;
      return this;
    }
    public WannaJoinRequest clearPostId() {
      hasPostId = false;
      postId_ = "";
      return this;
    }
    
    // required int32 state = 2;
    public static final int STATE_FIELD_NUMBER = 2;
    private boolean hasState;
    private int state_ = 0;
    public int getState() { return state_; }
    public boolean hasState() { return hasState; }
    public WannaJoinRequest setState(int value) {
      hasState = true;
      state_ = value;
      return this;
    }
    public WannaJoinRequest clearState() {
      hasState = false;
      state_ = 0;
      return this;
    }
    
    public final WannaJoinRequest clear() {
      clearPostId();
      clearState();
      cachedSize = -1;
      return this;
    }
    
    public final boolean isInitialized() {
      if (!hasPostId) return false;
      if (!hasState) return false;
      return true;
    }
    
    @Override
    public void writeTo(com.google.protobuf.micro.CodedOutputStreamMicro output)
                        throws java.io.IOException {
      if (hasPostId()) {
        output.writeString(1, getPostId());
      }
      if (hasState()) {
        output.writeInt32(2, getState());
      }
    }
    
    private int cachedSize = -1;
    @Override
    public int getCachedSize() {
      if (cachedSize < 0) {
        // getSerializedSize sets cachedSize
        getSerializedSize();
      }
      return cachedSize;
    }
    
    @Override
    public int getSerializedSize() {
      int size = 0;
      if (hasPostId()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeStringSize(1, getPostId());
      }
      if (hasState()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeInt32Size(2, getState());
      }
      cachedSize = size;
      return size;
    }
    
    @Override
    public WannaJoinRequest mergeFrom(
        com.google.protobuf.micro.CodedInputStreamMicro input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            setPostId(input.readString());
            break;
          }
          case 16: {
            setState(input.readInt32());
            break;
          }
        }
      }
    }
    
    public static WannaJoinRequest parseFrom(byte[] data)
        throws com.google.protobuf.micro.InvalidProtocolBufferMicroException {
      return (WannaJoinRequest) (new WannaJoinRequest().mergeFrom(data));
    }
    
    public static WannaJoinRequest parseFrom(
            com.google.protobuf.micro.CodedInputStreamMicro input)
        throws java.io.IOException {
      return new WannaJoinRequest().mergeFrom(input);
    }
    
  }
  
  @SuppressWarnings("hiding")
  public static final class Feedback extends
      com.google.protobuf.micro.MessageMicro {
    public Feedback() {}
    
    // required string bugs = 1;
    public static final int BUGS_FIELD_NUMBER = 1;
    private boolean hasBugs;
    private String bugs_ = "";
    public String getBugs() { return bugs_; }
    public boolean hasBugs() { return hasBugs; }
    public Feedback setBugs(String value) {
      hasBugs = true;
      bugs_ = value;
      return this;
    }
    public Feedback clearBugs() {
      hasBugs = false;
      bugs_ = "";
      return this;
    }
    
    // optional string qq = 2;
    public static final int QQ_FIELD_NUMBER = 2;
    private boolean hasQq;
    private String qq_ = "";
    public String getQq() { return qq_; }
    public boolean hasQq() { return hasQq; }
    public Feedback setQq(String value) {
      hasQq = true;
      qq_ = value;
      return this;
    }
    public Feedback clearQq() {
      hasQq = false;
      qq_ = "";
      return this;
    }
    
    // optional string email = 3;
    public static final int EMAIL_FIELD_NUMBER = 3;
    private boolean hasEmail;
    private String email_ = "";
    public String getEmail() { return email_; }
    public boolean hasEmail() { return hasEmail; }
    public Feedback setEmail(String value) {
      hasEmail = true;
      email_ = value;
      return this;
    }
    public Feedback clearEmail() {
      hasEmail = false;
      email_ = "";
      return this;
    }
    
    // optional string phone = 4;
    public static final int PHONE_FIELD_NUMBER = 4;
    private boolean hasPhone;
    private String phone_ = "";
    public String getPhone() { return phone_; }
    public boolean hasPhone() { return hasPhone; }
    public Feedback setPhone(String value) {
      hasPhone = true;
      phone_ = value;
      return this;
    }
    public Feedback clearPhone() {
      hasPhone = false;
      phone_ = "";
      return this;
    }
    
    public final Feedback clear() {
      clearBugs();
      clearQq();
      clearEmail();
      clearPhone();
      cachedSize = -1;
      return this;
    }
    
    public final boolean isInitialized() {
      if (!hasBugs) return false;
      return true;
    }
    
    @Override
    public void writeTo(com.google.protobuf.micro.CodedOutputStreamMicro output)
                        throws java.io.IOException {
      if (hasBugs()) {
        output.writeString(1, getBugs());
      }
      if (hasQq()) {
        output.writeString(2, getQq());
      }
      if (hasEmail()) {
        output.writeString(3, getEmail());
      }
      if (hasPhone()) {
        output.writeString(4, getPhone());
      }
    }
    
    private int cachedSize = -1;
    @Override
    public int getCachedSize() {
      if (cachedSize < 0) {
        // getSerializedSize sets cachedSize
        getSerializedSize();
      }
      return cachedSize;
    }
    
    @Override
    public int getSerializedSize() {
      int size = 0;
      if (hasBugs()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeStringSize(1, getBugs());
      }
      if (hasQq()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeStringSize(2, getQq());
      }
      if (hasEmail()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeStringSize(3, getEmail());
      }
      if (hasPhone()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeStringSize(4, getPhone());
      }
      cachedSize = size;
      return size;
    }
    
    @Override
    public Feedback mergeFrom(
        com.google.protobuf.micro.CodedInputStreamMicro input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            setBugs(input.readString());
            break;
          }
          case 18: {
            setQq(input.readString());
            break;
          }
          case 26: {
            setEmail(input.readString());
            break;
          }
          case 34: {
            setPhone(input.readString());
            break;
          }
        }
      }
    }
    
    public static Feedback parseFrom(byte[] data)
        throws com.google.protobuf.micro.InvalidProtocolBufferMicroException {
      return (Feedback) (new Feedback().mergeFrom(data));
    }
    
    public static Feedback parseFrom(
            com.google.protobuf.micro.CodedInputStreamMicro input)
        throws java.io.IOException {
      return new Feedback().mergeFrom(input);
    }
    
  }
  
  @SuppressWarnings("hiding")
  public static final class DataUpdateRequestInfo extends
      com.google.protobuf.micro.MessageMicro {
    public DataUpdateRequestInfo() {}
    
    // repeated string data_file_name = 100;
    public static final int DATA_FILE_NAME_FIELD_NUMBER = 100;
    private java.util.List<String> dataFileName_ =
      java.util.Collections.emptyList();
    public java.util.List<String> getDataFileNameList() {
      return dataFileName_;
    }
    public int getDataFileNameCount() { return dataFileName_.size(); }
    public String getDataFileName(int index) {
      return dataFileName_.get(index);
    }
    public DataUpdateRequestInfo setDataFileName(int index, String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  dataFileName_.set(index, value);
      return this;
    }
    public DataUpdateRequestInfo addDataFileName(String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  if (dataFileName_.isEmpty()) {
        dataFileName_ = new java.util.ArrayList<String>();
      }
      dataFileName_.add(value);
      return this;
    }
    public DataUpdateRequestInfo clearDataFileName() {
      dataFileName_ = java.util.Collections.emptyList();
      return this;
    }
    
    public final DataUpdateRequestInfo clear() {
      clearDataFileName();
      cachedSize = -1;
      return this;
    }
    
    public final boolean isInitialized() {
      return true;
    }
    
    @Override
    public void writeTo(com.google.protobuf.micro.CodedOutputStreamMicro output)
                        throws java.io.IOException {
      for (String element : getDataFileNameList()) {
        output.writeString(100, element);
      }
    }
    
    private int cachedSize = -1;
    @Override
    public int getCachedSize() {
      if (cachedSize < 0) {
        // getSerializedSize sets cachedSize
        getSerializedSize();
      }
      return cachedSize;
    }
    
    @Override
    public int getSerializedSize() {
      int size = 0;
      {
        int dataSize = 0;
        for (String element : getDataFileNameList()) {
          dataSize += com.google.protobuf.micro.CodedOutputStreamMicro
            .computeStringSizeNoTag(element);
        }
        size += dataSize;
        size += 2 * getDataFileNameList().size();
      }
      cachedSize = size;
      return size;
    }
    
    @Override
    public DataUpdateRequestInfo mergeFrom(
        com.google.protobuf.micro.CodedInputStreamMicro input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 802: {
            addDataFileName(input.readString());
            break;
          }
        }
      }
    }
    
    public static DataUpdateRequestInfo parseFrom(byte[] data)
        throws com.google.protobuf.micro.InvalidProtocolBufferMicroException {
      return (DataUpdateRequestInfo) (new DataUpdateRequestInfo().mergeFrom(data));
    }
    
    public static DataUpdateRequestInfo parseFrom(
            com.google.protobuf.micro.CodedInputStreamMicro input)
        throws java.io.IOException {
      return new DataUpdateRequestInfo().mergeFrom(input);
    }
    
  }
  
  @SuppressWarnings("hiding")
  public static final class ResponseInfo extends
      com.google.protobuf.micro.MessageMicro {
    public ResponseInfo() {}
    
    // required .ErrCode err_code = 1;
    public static final int ERR_CODE_FIELD_NUMBER = 1;
    private boolean hasErrCode;
    private int errCode_ = MessageProtos.SUCCESS;
    public boolean hasErrCode() { return hasErrCode; }
    public int getErrCode() { return errCode_; }
    public ResponseInfo setErrCode(int value) {
      hasErrCode = true;
      errCode_ = value;
      return this;
    }
    public ResponseInfo clearErrCode() {
      hasErrCode = false;
      errCode_ = MessageProtos.SUCCESS;
      return this;
    }
    
    // optional .PostResponseInfoList post_info_list = 2;
    public static final int POST_INFO_LIST_FIELD_NUMBER = 2;
    private boolean hasPostInfoList;
    private PostResponseInfoList postInfoList_ = null;
    public boolean hasPostInfoList() { return hasPostInfoList; }
    public PostResponseInfoList getPostInfoList() { return postInfoList_; }
    public ResponseInfo setPostInfoList(PostResponseInfoList value) {
      if (value == null) {
        throw new NullPointerException();
      }
      hasPostInfoList = true;
      postInfoList_ = value;
      return this;
    }
    public ResponseInfo clearPostInfoList() {
      hasPostInfoList = false;
      postInfoList_ = null;
      return this;
    }
    
    // optional .UserInfoList user_info_list = 3;
    public static final int USER_INFO_LIST_FIELD_NUMBER = 3;
    private boolean hasUserInfoList;
    private UserInfoList userInfoList_ = null;
    public boolean hasUserInfoList() { return hasUserInfoList; }
    public UserInfoList getUserInfoList() { return userInfoList_; }
    public ResponseInfo setUserInfoList(UserInfoList value) {
      if (value == null) {
        throw new NullPointerException();
      }
      hasUserInfoList = true;
      userInfoList_ = value;
      return this;
    }
    public ResponseInfo clearUserInfoList() {
      hasUserInfoList = false;
      userInfoList_ = null;
      return this;
    }
    
    // optional .UserInfo user_info = 4;
    public static final int USER_INFO_FIELD_NUMBER = 4;
    private boolean hasUserInfo;
    private UserInfo userInfo_ = null;
    public boolean hasUserInfo() { return hasUserInfo; }
    public UserInfo getUserInfo() { return userInfo_; }
    public ResponseInfo setUserInfo(UserInfo value) {
      if (value == null) {
        throw new NullPointerException();
      }
      hasUserInfo = true;
      userInfo_ = value;
      return this;
    }
    public ResponseInfo clearUserInfo() {
      hasUserInfo = false;
      userInfo_ = null;
      return this;
    }
    
    // optional .WannaJoinResponse wanna_join_response = 5;
    public static final int WANNA_JOIN_RESPONSE_FIELD_NUMBER = 5;
    private boolean hasWannaJoinResponse;
    private WannaJoinResponse wannaJoinResponse_ = null;
    public boolean hasWannaJoinResponse() { return hasWannaJoinResponse; }
    public WannaJoinResponse getWannaJoinResponse() { return wannaJoinResponse_; }
    public ResponseInfo setWannaJoinResponse(WannaJoinResponse value) {
      if (value == null) {
        throw new NullPointerException();
      }
      hasWannaJoinResponse = true;
      wannaJoinResponse_ = value;
      return this;
    }
    public ResponseInfo clearWannaJoinResponse() {
      hasWannaJoinResponse = false;
      wannaJoinResponse_ = null;
      return this;
    }
    
    // optional .LikedMessageList liked_message_list = 6;
    public static final int LIKED_MESSAGE_LIST_FIELD_NUMBER = 6;
    private boolean hasLikedMessageList;
    private LikedMessageList likedMessageList_ = null;
    public boolean hasLikedMessageList() { return hasLikedMessageList; }
    public LikedMessageList getLikedMessageList() { return likedMessageList_; }
    public ResponseInfo setLikedMessageList(LikedMessageList value) {
      if (value == null) {
        throw new NullPointerException();
      }
      hasLikedMessageList = true;
      likedMessageList_ = value;
      return this;
    }
    public ResponseInfo clearLikedMessageList() {
      hasLikedMessageList = false;
      likedMessageList_ = null;
      return this;
    }
    
    // optional .ClientUpdateInfo client_update_info = 7;
    public static final int CLIENT_UPDATE_INFO_FIELD_NUMBER = 7;
    private boolean hasClientUpdateInfo;
    private ClientUpdateInfo clientUpdateInfo_ = null;
    public boolean hasClientUpdateInfo() { return hasClientUpdateInfo; }
    public ClientUpdateInfo getClientUpdateInfo() { return clientUpdateInfo_; }
    public ResponseInfo setClientUpdateInfo(ClientUpdateInfo value) {
      if (value == null) {
        throw new NullPointerException();
      }
      hasClientUpdateInfo = true;
      clientUpdateInfo_ = value;
      return this;
    }
    public ResponseInfo clearClientUpdateInfo() {
      hasClientUpdateInfo = false;
      clientUpdateInfo_ = null;
      return this;
    }
    
    // optional .DataUpdateResponseInfo data_update_info = 8;
    public static final int DATA_UPDATE_INFO_FIELD_NUMBER = 8;
    private boolean hasDataUpdateInfo;
    private DataUpdateResponseInfo dataUpdateInfo_ = null;
    public boolean hasDataUpdateInfo() { return hasDataUpdateInfo; }
    public DataUpdateResponseInfo getDataUpdateInfo() { return dataUpdateInfo_; }
    public ResponseInfo setDataUpdateInfo(DataUpdateResponseInfo value) {
      if (value == null) {
        throw new NullPointerException();
      }
      hasDataUpdateInfo = true;
      dataUpdateInfo_ = value;
      return this;
    }
    public ResponseInfo clearDataUpdateInfo() {
      hasDataUpdateInfo = false;
      dataUpdateInfo_ = null;
      return this;
    }
    
    // optional .PostResponseInfo post_info = 9;
    public static final int POST_INFO_FIELD_NUMBER = 9;
    private boolean hasPostInfo;
    private PostResponseInfo postInfo_ = null;
    public boolean hasPostInfo() { return hasPostInfo; }
    public PostResponseInfo getPostInfo() { return postInfo_; }
    public ResponseInfo setPostInfo(PostResponseInfo value) {
      if (value == null) {
        throw new NullPointerException();
      }
      hasPostInfo = true;
      postInfo_ = value;
      return this;
    }
    public ResponseInfo clearPostInfo() {
      hasPostInfo = false;
      postInfo_ = null;
      return this;
    }
    
    // repeated .HotCity hot_citys = 100;
    public static final int HOT_CITYS_FIELD_NUMBER = 100;
    private java.util.List<HotCity> hotCitys_ =
      java.util.Collections.emptyList();
    public java.util.List<HotCity> getHotCitysList() {
      return hotCitys_;
    }
    public int getHotCitysCount() { return hotCitys_.size(); }
    public HotCity getHotCitys(int index) {
      return hotCitys_.get(index);
    }
    public ResponseInfo setHotCitys(int index, HotCity value) {
      if (value == null) {
        throw new NullPointerException();
      }
      hotCitys_.set(index, value);
      return this;
    }
    public ResponseInfo addHotCitys(HotCity value) {
      if (value == null) {
        throw new NullPointerException();
      }
      if (hotCitys_.isEmpty()) {
        hotCitys_ = new java.util.ArrayList<HotCity>();
      }
      hotCitys_.add(value);
      return this;
    }
    public ResponseInfo clearHotCitys() {
      hotCitys_ = java.util.Collections.emptyList();
      return this;
    }
    
    public final ResponseInfo clear() {
      clearErrCode();
      clearPostInfoList();
      clearUserInfoList();
      clearUserInfo();
      clearWannaJoinResponse();
      clearLikedMessageList();
      clearClientUpdateInfo();
      clearDataUpdateInfo();
      clearPostInfo();
      clearHotCitys();
      cachedSize = -1;
      return this;
    }
    
    public final boolean isInitialized() {
      if (!hasErrCode) return false;
      if (hasPostInfoList()) {
        if (!getPostInfoList().isInitialized()) return false;
      }
      if (hasUserInfoList()) {
        if (!getUserInfoList().isInitialized()) return false;
      }
      if (hasUserInfo()) {
        if (!getUserInfo().isInitialized()) return false;
      }
      if (hasWannaJoinResponse()) {
        if (!getWannaJoinResponse().isInitialized()) return false;
      }
      if (hasLikedMessageList()) {
        if (!getLikedMessageList().isInitialized()) return false;
      }
      if (hasClientUpdateInfo()) {
        if (!getClientUpdateInfo().isInitialized()) return false;
      }
      if (hasDataUpdateInfo()) {
        if (!getDataUpdateInfo().isInitialized()) return false;
      }
      if (hasPostInfo()) {
        if (!getPostInfo().isInitialized()) return false;
      }
      for (HotCity element : getHotCitysList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }
    
    @Override
    public void writeTo(com.google.protobuf.micro.CodedOutputStreamMicro output)
                        throws java.io.IOException {
      if (hasErrCode()) {
        output.writeInt32(1, getErrCode());
      }
      if (hasPostInfoList()) {
        output.writeMessage(2, getPostInfoList());
      }
      if (hasUserInfoList()) {
        output.writeMessage(3, getUserInfoList());
      }
      if (hasUserInfo()) {
        output.writeMessage(4, getUserInfo());
      }
      if (hasWannaJoinResponse()) {
        output.writeMessage(5, getWannaJoinResponse());
      }
      if (hasLikedMessageList()) {
        output.writeMessage(6, getLikedMessageList());
      }
      if (hasClientUpdateInfo()) {
        output.writeMessage(7, getClientUpdateInfo());
      }
      if (hasDataUpdateInfo()) {
        output.writeMessage(8, getDataUpdateInfo());
      }
      if (hasPostInfo()) {
        output.writeMessage(9, getPostInfo());
      }
      for (HotCity element : getHotCitysList()) {
        output.writeMessage(100, element);
      }
    }
    
    private int cachedSize = -1;
    @Override
    public int getCachedSize() {
      if (cachedSize < 0) {
        // getSerializedSize sets cachedSize
        getSerializedSize();
      }
      return cachedSize;
    }
    
    @Override
    public int getSerializedSize() {
      int size = 0;
      if (hasErrCode()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeInt32Size(1, getErrCode());
      }
      if (hasPostInfoList()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeMessageSize(2, getPostInfoList());
      }
      if (hasUserInfoList()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeMessageSize(3, getUserInfoList());
      }
      if (hasUserInfo()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeMessageSize(4, getUserInfo());
      }
      if (hasWannaJoinResponse()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeMessageSize(5, getWannaJoinResponse());
      }
      if (hasLikedMessageList()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeMessageSize(6, getLikedMessageList());
      }
      if (hasClientUpdateInfo()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeMessageSize(7, getClientUpdateInfo());
      }
      if (hasDataUpdateInfo()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeMessageSize(8, getDataUpdateInfo());
      }
      if (hasPostInfo()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeMessageSize(9, getPostInfo());
      }
      for (HotCity element : getHotCitysList()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeMessageSize(100, element);
      }
      cachedSize = size;
      return size;
    }
    
    @Override
    public ResponseInfo mergeFrom(
        com.google.protobuf.micro.CodedInputStreamMicro input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
              setErrCode(input.readInt32());
            break;
          }
          case 18: {
            PostResponseInfoList value = new PostResponseInfoList();
            input.readMessage(value);
            setPostInfoList(value);
            break;
          }
          case 26: {
            UserInfoList value = new UserInfoList();
            input.readMessage(value);
            setUserInfoList(value);
            break;
          }
          case 34: {
            UserInfo value = new UserInfo();
            input.readMessage(value);
            setUserInfo(value);
            break;
          }
          case 42: {
            WannaJoinResponse value = new WannaJoinResponse();
            input.readMessage(value);
            setWannaJoinResponse(value);
            break;
          }
          case 50: {
            LikedMessageList value = new LikedMessageList();
            input.readMessage(value);
            setLikedMessageList(value);
            break;
          }
          case 58: {
            ClientUpdateInfo value = new ClientUpdateInfo();
            input.readMessage(value);
            setClientUpdateInfo(value);
            break;
          }
          case 66: {
            DataUpdateResponseInfo value = new DataUpdateResponseInfo();
            input.readMessage(value);
            setDataUpdateInfo(value);
            break;
          }
          case 74: {
            PostResponseInfo value = new PostResponseInfo();
            input.readMessage(value);
            setPostInfo(value);
            break;
          }
          case 802: {
            HotCity value = new HotCity();
            input.readMessage(value);
            addHotCitys(value);
            break;
          }
        }
      }
    }
    
    public static ResponseInfo parseFrom(byte[] data)
        throws com.google.protobuf.micro.InvalidProtocolBufferMicroException {
      return (ResponseInfo) (new ResponseInfo().mergeFrom(data));
    }
    
    public static ResponseInfo parseFrom(
            com.google.protobuf.micro.CodedInputStreamMicro input)
        throws java.io.IOException {
      return new ResponseInfo().mergeFrom(input);
    }
    
  }
  
  @SuppressWarnings("hiding")
  public static final class HotCity extends
      com.google.protobuf.micro.MessageMicro {
    public HotCity() {}
    
    // required string url = 1;
    public static final int URL_FIELD_NUMBER = 1;
    private boolean hasUrl;
    private String url_ = "";
    public String getUrl() { return url_; }
    public boolean hasUrl() { return hasUrl; }
    public HotCity setUrl(String value) {
      hasUrl = true;
      url_ = value;
      return this;
    }
    public HotCity clearUrl() {
      hasUrl = false;
      url_ = "";
      return this;
    }
    
    // required string name = 2;
    public static final int NAME_FIELD_NUMBER = 2;
    private boolean hasName;
    private String name_ = "";
    public String getName() { return name_; }
    public boolean hasName() { return hasName; }
    public HotCity setName(String value) {
      hasName = true;
      name_ = value;
      return this;
    }
    public HotCity clearName() {
      hasName = false;
      name_ = "";
      return this;
    }
    
    // required string desc = 3;
    public static final int DESC_FIELD_NUMBER = 3;
    private boolean hasDesc;
    private String desc_ = "";
    public String getDesc() { return desc_; }
    public boolean hasDesc() { return hasDesc; }
    public HotCity setDesc(String value) {
      hasDesc = true;
      desc_ = value;
      return this;
    }
    public HotCity clearDesc() {
      hasDesc = false;
      desc_ = "";
      return this;
    }
    
    public final HotCity clear() {
      clearUrl();
      clearName();
      clearDesc();
      cachedSize = -1;
      return this;
    }
    
    public final boolean isInitialized() {
      if (!hasUrl) return false;
      if (!hasName) return false;
      if (!hasDesc) return false;
      return true;
    }
    
    @Override
    public void writeTo(com.google.protobuf.micro.CodedOutputStreamMicro output)
                        throws java.io.IOException {
      if (hasUrl()) {
        output.writeString(1, getUrl());
      }
      if (hasName()) {
        output.writeString(2, getName());
      }
      if (hasDesc()) {
        output.writeString(3, getDesc());
      }
    }
    
    private int cachedSize = -1;
    @Override
    public int getCachedSize() {
      if (cachedSize < 0) {
        // getSerializedSize sets cachedSize
        getSerializedSize();
      }
      return cachedSize;
    }
    
    @Override
    public int getSerializedSize() {
      int size = 0;
      if (hasUrl()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeStringSize(1, getUrl());
      }
      if (hasName()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeStringSize(2, getName());
      }
      if (hasDesc()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeStringSize(3, getDesc());
      }
      cachedSize = size;
      return size;
    }
    
    @Override
    public HotCity mergeFrom(
        com.google.protobuf.micro.CodedInputStreamMicro input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            setUrl(input.readString());
            break;
          }
          case 18: {
            setName(input.readString());
            break;
          }
          case 26: {
            setDesc(input.readString());
            break;
          }
        }
      }
    }
    
    public static HotCity parseFrom(byte[] data)
        throws com.google.protobuf.micro.InvalidProtocolBufferMicroException {
      return (HotCity) (new HotCity().mergeFrom(data));
    }
    
    public static HotCity parseFrom(
            com.google.protobuf.micro.CodedInputStreamMicro input)
        throws java.io.IOException {
      return new HotCity().mergeFrom(input);
    }
    
  }
  
  @SuppressWarnings("hiding")
  public static final class PostResponseInfoList extends
      com.google.protobuf.micro.MessageMicro {
    public PostResponseInfoList() {}
    
    // required .PageResponseInfo page_response_info = 1;
    public static final int PAGE_RESPONSE_INFO_FIELD_NUMBER = 1;
    private boolean hasPageResponseInfo;
    private PageResponseInfo pageResponseInfo_ = null;
    public boolean hasPageResponseInfo() { return hasPageResponseInfo; }
    public PageResponseInfo getPageResponseInfo() { return pageResponseInfo_; }
    public PostResponseInfoList setPageResponseInfo(PageResponseInfo value) {
      if (value == null) {
        throw new NullPointerException();
      }
      hasPageResponseInfo = true;
      pageResponseInfo_ = value;
      return this;
    }
    public PostResponseInfoList clearPageResponseInfo() {
      hasPageResponseInfo = false;
      pageResponseInfo_ = null;
      return this;
    }
    
    // repeated .PostResponseInfo post_infos = 100;
    public static final int POST_INFOS_FIELD_NUMBER = 100;
    private java.util.List<PostResponseInfo> postInfos_ =
      java.util.Collections.emptyList();
    public java.util.List<PostResponseInfo> getPostInfosList() {
      return postInfos_;
    }
    public int getPostInfosCount() { return postInfos_.size(); }
    public PostResponseInfo getPostInfos(int index) {
      return postInfos_.get(index);
    }
    public PostResponseInfoList setPostInfos(int index, PostResponseInfo value) {
      if (value == null) {
        throw new NullPointerException();
      }
      postInfos_.set(index, value);
      return this;
    }
    public PostResponseInfoList addPostInfos(PostResponseInfo value) {
      if (value == null) {
        throw new NullPointerException();
      }
      if (postInfos_.isEmpty()) {
        postInfos_ = new java.util.ArrayList<PostResponseInfo>();
      }
      postInfos_.add(value);
      return this;
    }
    public PostResponseInfoList clearPostInfos() {
      postInfos_ = java.util.Collections.emptyList();
      return this;
    }
    
    public final PostResponseInfoList clear() {
      clearPageResponseInfo();
      clearPostInfos();
      cachedSize = -1;
      return this;
    }
    
    public final boolean isInitialized() {
      if (!hasPageResponseInfo) return false;
      if (!getPageResponseInfo().isInitialized()) return false;
      for (PostResponseInfo element : getPostInfosList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }
    
    @Override
    public void writeTo(com.google.protobuf.micro.CodedOutputStreamMicro output)
                        throws java.io.IOException {
      if (hasPageResponseInfo()) {
        output.writeMessage(1, getPageResponseInfo());
      }
      for (PostResponseInfo element : getPostInfosList()) {
        output.writeMessage(100, element);
      }
    }
    
    private int cachedSize = -1;
    @Override
    public int getCachedSize() {
      if (cachedSize < 0) {
        // getSerializedSize sets cachedSize
        getSerializedSize();
      }
      return cachedSize;
    }
    
    @Override
    public int getSerializedSize() {
      int size = 0;
      if (hasPageResponseInfo()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeMessageSize(1, getPageResponseInfo());
      }
      for (PostResponseInfo element : getPostInfosList()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeMessageSize(100, element);
      }
      cachedSize = size;
      return size;
    }
    
    @Override
    public PostResponseInfoList mergeFrom(
        com.google.protobuf.micro.CodedInputStreamMicro input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            PageResponseInfo value = new PageResponseInfo();
            input.readMessage(value);
            setPageResponseInfo(value);
            break;
          }
          case 802: {
            PostResponseInfo value = new PostResponseInfo();
            input.readMessage(value);
            addPostInfos(value);
            break;
          }
        }
      }
    }
    
    public static PostResponseInfoList parseFrom(byte[] data)
        throws com.google.protobuf.micro.InvalidProtocolBufferMicroException {
      return (PostResponseInfoList) (new PostResponseInfoList().mergeFrom(data));
    }
    
    public static PostResponseInfoList parseFrom(
            com.google.protobuf.micro.CodedInputStreamMicro input)
        throws java.io.IOException {
      return new PostResponseInfoList().mergeFrom(input);
    }
    
  }
  
  @SuppressWarnings("hiding")
  public static final class PostResponseInfo extends
      com.google.protobuf.micro.MessageMicro {
    public PostResponseInfo() {}
    
    // required string id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private boolean hasId;
    private String id_ = "";
    public String getId() { return id_; }
    public boolean hasId() { return hasId; }
    public PostResponseInfo setId(String value) {
      hasId = true;
      id_ = value;
      return this;
    }
    public PostResponseInfo clearId() {
      hasId = false;
      id_ = "";
      return this;
    }
    
    // required string uid = 2;
    public static final int UID_FIELD_NUMBER = 2;
    private boolean hasUid;
    private String uid_ = "";
    public String getUid() { return uid_; }
    public boolean hasUid() { return hasUid; }
    public PostResponseInfo setUid(String value) {
      hasUid = true;
      uid_ = value;
      return this;
    }
    public PostResponseInfo clearUid() {
      hasUid = false;
      uid_ = "";
      return this;
    }
    
    // required string created_time = 3;
    public static final int CREATED_TIME_FIELD_NUMBER = 3;
    private boolean hasCreatedTime;
    private String createdTime_ = "";
    public String getCreatedTime() { return createdTime_; }
    public boolean hasCreatedTime() { return hasCreatedTime; }
    public PostResponseInfo setCreatedTime(String value) {
      hasCreatedTime = true;
      createdTime_ = value;
      return this;
    }
    public PostResponseInfo clearCreatedTime() {
      hasCreatedTime = false;
      createdTime_ = "";
      return this;
    }
    
    // required string days = 4;
    public static final int DAYS_FIELD_NUMBER = 4;
    private boolean hasDays;
    private String days_ = "";
    public String getDays() { return days_; }
    public boolean hasDays() { return hasDays; }
    public PostResponseInfo setDays(String value) {
      hasDays = true;
      days_ = value;
      return this;
    }
    public PostResponseInfo clearDays() {
      hasDays = false;
      days_ = "";
      return this;
    }
    
    // required string weixin = 5;
    public static final int WEIXIN_FIELD_NUMBER = 5;
    private boolean hasWeixin;
    private String weixin_ = "";
    public String getWeixin() { return weixin_; }
    public boolean hasWeixin() { return hasWeixin; }
    public PostResponseInfo setWeixin(String value) {
      hasWeixin = true;
      weixin_ = value;
      return this;
    }
    public PostResponseInfo clearWeixin() {
      hasWeixin = false;
      weixin_ = "";
      return this;
    }
    
    // required string qq = 6;
    public static final int QQ_FIELD_NUMBER = 6;
    private boolean hasQq;
    private String qq_ = "";
    public String getQq() { return qq_; }
    public boolean hasQq() { return hasQq; }
    public PostResponseInfo setQq(String value) {
      hasQq = true;
      qq_ = value;
      return this;
    }
    public PostResponseInfo clearQq() {
      hasQq = false;
      qq_ = "";
      return this;
    }
    
    // required string phone = 7;
    public static final int PHONE_FIELD_NUMBER = 7;
    private boolean hasPhone;
    private String phone_ = "";
    public String getPhone() { return phone_; }
    public boolean hasPhone() { return hasPhone; }
    public PostResponseInfo setPhone(String value) {
      hasPhone = true;
      phone_ = value;
      return this;
    }
    public PostResponseInfo clearPhone() {
      hasPhone = false;
      phone_ = "";
      return this;
    }
    
    // required string content = 8;
    public static final int CONTENT_FIELD_NUMBER = 8;
    private boolean hasContent;
    private String content_ = "";
    public String getContent() { return content_; }
    public boolean hasContent() { return hasContent; }
    public PostResponseInfo setContent(String value) {
      hasContent = true;
      content_ = value;
      return this;
    }
    public PostResponseInfo clearContent() {
      hasContent = false;
      content_ = "";
      return this;
    }
    
    // required string post_place = 9;
    public static final int POST_PLACE_FIELD_NUMBER = 9;
    private boolean hasPostPlace;
    private String postPlace_ = "";
    public String getPostPlace() { return postPlace_; }
    public boolean hasPostPlace() { return hasPostPlace; }
    public PostResponseInfo setPostPlace(String value) {
      hasPostPlace = true;
      postPlace_ = value;
      return this;
    }
    public PostResponseInfo clearPostPlace() {
      hasPostPlace = false;
      postPlace_ = "";
      return this;
    }
    
    // required string start_time = 10;
    public static final int START_TIME_FIELD_NUMBER = 10;
    private boolean hasStartTime;
    private String startTime_ = "";
    public String getStartTime() { return startTime_; }
    public boolean hasStartTime() { return hasStartTime; }
    public PostResponseInfo setStartTime(String value) {
      hasStartTime = true;
      startTime_ = value;
      return this;
    }
    public PostResponseInfo clearStartTime() {
      hasStartTime = false;
      startTime_ = "";
      return this;
    }
    
    // required string finish_time = 11;
    public static final int FINISH_TIME_FIELD_NUMBER = 11;
    private boolean hasFinishTime;
    private String finishTime_ = "";
    public String getFinishTime() { return finishTime_; }
    public boolean hasFinishTime() { return hasFinishTime; }
    public PostResponseInfo setFinishTime(String value) {
      hasFinishTime = true;
      finishTime_ = value;
      return this;
    }
    public PostResponseInfo clearFinishTime() {
      hasFinishTime = false;
      finishTime_ = "";
      return this;
    }
    
    // required string dest = 12;
    public static final int DEST_FIELD_NUMBER = 12;
    private boolean hasDest;
    private String dest_ = "";
    public String getDest() { return dest_; }
    public boolean hasDest() { return hasDest; }
    public PostResponseInfo setDest(String value) {
      hasDest = true;
      dest_ = value;
      return this;
    }
    public PostResponseInfo clearDest() {
      hasDest = false;
      dest_ = "";
      return this;
    }
    
    // required bool is_my = 13;
    public static final int IS_MY_FIELD_NUMBER = 13;
    private boolean hasIsMy;
    private boolean isMy_ = false;
    public boolean getIsMy() { return isMy_; }
    public boolean hasIsMy() { return hasIsMy; }
    public PostResponseInfo setIsMy(boolean value) {
      hasIsMy = true;
      isMy_ = value;
      return this;
    }
    public PostResponseInfo clearIsMy() {
      hasIsMy = false;
      isMy_ = false;
      return this;
    }
    
    // required bool is_liked = 14;
    public static final int IS_LIKED_FIELD_NUMBER = 14;
    private boolean hasIsLiked;
    private boolean isLiked_ = false;
    public boolean getIsLiked() { return isLiked_; }
    public boolean hasIsLiked() { return hasIsLiked; }
    public PostResponseInfo setIsLiked(boolean value) {
      hasIsLiked = true;
      isLiked_ = value;
      return this;
    }
    public PostResponseInfo clearIsLiked() {
      hasIsLiked = false;
      isLiked_ = false;
      return this;
    }
    
    // required int32 like_num = 15;
    public static final int LIKE_NUM_FIELD_NUMBER = 15;
    private boolean hasLikeNum;
    private int likeNum_ = 0;
    public int getLikeNum() { return likeNum_; }
    public boolean hasLikeNum() { return hasLikeNum; }
    public PostResponseInfo setLikeNum(int value) {
      hasLikeNum = true;
      likeNum_ = value;
      return this;
    }
    public PostResponseInfo clearLikeNum() {
      hasLikeNum = false;
      likeNum_ = 0;
      return this;
    }
    
    // required .UserInfo user_info = 16;
    public static final int USER_INFO_FIELD_NUMBER = 16;
    private boolean hasUserInfo;
    private UserInfo userInfo_ = null;
    public boolean hasUserInfo() { return hasUserInfo; }
    public UserInfo getUserInfo() { return userInfo_; }
    public PostResponseInfo setUserInfo(UserInfo value) {
      if (value == null) {
        throw new NullPointerException();
      }
      hasUserInfo = true;
      userInfo_ = value;
      return this;
    }
    public PostResponseInfo clearUserInfo() {
      hasUserInfo = false;
      userInfo_ = null;
      return this;
    }
    
    // required .PostStatus status = 17;
    public static final int STATUS_FIELD_NUMBER = 17;
    private boolean hasStatus;
    private int status_ = MessageProtos.OPENED;
    public boolean hasStatus() { return hasStatus; }
    public int getStatus() { return status_; }
    public PostResponseInfo setStatus(int value) {
      hasStatus = true;
      status_ = value;
      return this;
    }
    public PostResponseInfo clearStatus() {
      hasStatus = false;
      status_ = MessageProtos.OPENED;
      return this;
    }
    
    // required int32 pv = 18;
    public static final int PV_FIELD_NUMBER = 18;
    private boolean hasPv;
    private int pv_ = 0;
    public int getPv() { return pv_; }
    public boolean hasPv() { return hasPv; }
    public PostResponseInfo setPv(int value) {
      hasPv = true;
      pv_ = value;
      return this;
    }
    public PostResponseInfo clearPv() {
      hasPv = false;
      pv_ = 0;
      return this;
    }
    
    // repeated .PostImg imgs = 100;
    public static final int IMGS_FIELD_NUMBER = 100;
    private java.util.List<PostImg> imgs_ =
      java.util.Collections.emptyList();
    public java.util.List<PostImg> getImgsList() {
      return imgs_;
    }
    public int getImgsCount() { return imgs_.size(); }
    public PostImg getImgs(int index) {
      return imgs_.get(index);
    }
    public PostResponseInfo setImgs(int index, PostImg value) {
      if (value == null) {
        throw new NullPointerException();
      }
      imgs_.set(index, value);
      return this;
    }
    public PostResponseInfo addImgs(PostImg value) {
      if (value == null) {
        throw new NullPointerException();
      }
      if (imgs_.isEmpty()) {
        imgs_ = new java.util.ArrayList<PostImg>();
      }
      imgs_.add(value);
      return this;
    }
    public PostResponseInfo clearImgs() {
      imgs_ = java.util.Collections.emptyList();
      return this;
    }
    
    // repeated string post_tag = 101;
    public static final int POST_TAG_FIELD_NUMBER = 101;
    private java.util.List<String> postTag_ =
      java.util.Collections.emptyList();
    public java.util.List<String> getPostTagList() {
      return postTag_;
    }
    public int getPostTagCount() { return postTag_.size(); }
    public String getPostTag(int index) {
      return postTag_.get(index);
    }
    public PostResponseInfo setPostTag(int index, String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  postTag_.set(index, value);
      return this;
    }
    public PostResponseInfo addPostTag(String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  if (postTag_.isEmpty()) {
        postTag_ = new java.util.ArrayList<String>();
      }
      postTag_.add(value);
      return this;
    }
    public PostResponseInfo clearPostTag() {
      postTag_ = java.util.Collections.emptyList();
      return this;
    }
    
    // optional .PostDetailInfo post_detail_info = 19;
    public static final int POST_DETAIL_INFO_FIELD_NUMBER = 19;
    private boolean hasPostDetailInfo;
    private PostDetailInfo postDetailInfo_ = null;
    public boolean hasPostDetailInfo() { return hasPostDetailInfo; }
    public PostDetailInfo getPostDetailInfo() { return postDetailInfo_; }
    public PostResponseInfo setPostDetailInfo(PostDetailInfo value) {
      if (value == null) {
        throw new NullPointerException();
      }
      hasPostDetailInfo = true;
      postDetailInfo_ = value;
      return this;
    }
    public PostResponseInfo clearPostDetailInfo() {
      hasPostDetailInfo = false;
      postDetailInfo_ = null;
      return this;
    }
    
    public final PostResponseInfo clear() {
      clearId();
      clearUid();
      clearCreatedTime();
      clearDays();
      clearWeixin();
      clearQq();
      clearPhone();
      clearContent();
      clearPostPlace();
      clearStartTime();
      clearFinishTime();
      clearDest();
      clearIsMy();
      clearIsLiked();
      clearLikeNum();
      clearUserInfo();
      clearStatus();
      clearPv();
      clearImgs();
      clearPostTag();
      clearPostDetailInfo();
      cachedSize = -1;
      return this;
    }
    
    public final boolean isInitialized() {
      if (!hasId) return false;
      if (!hasUid) return false;
      if (!hasCreatedTime) return false;
      if (!hasDays) return false;
      if (!hasWeixin) return false;
      if (!hasQq) return false;
      if (!hasPhone) return false;
      if (!hasContent) return false;
      if (!hasPostPlace) return false;
      if (!hasStartTime) return false;
      if (!hasFinishTime) return false;
      if (!hasDest) return false;
      if (!hasIsMy) return false;
      if (!hasIsLiked) return false;
      if (!hasLikeNum) return false;
      if (!hasUserInfo) return false;
      if (!hasStatus) return false;
      if (!hasPv) return false;
      if (!getUserInfo().isInitialized()) return false;
      for (PostImg element : getImgsList()) {
        if (!element.isInitialized()) return false;
      }
      if (hasPostDetailInfo()) {
        if (!getPostDetailInfo().isInitialized()) return false;
      }
      return true;
    }
    
    @Override
    public void writeTo(com.google.protobuf.micro.CodedOutputStreamMicro output)
                        throws java.io.IOException {
      if (hasId()) {
        output.writeString(1, getId());
      }
      if (hasUid()) {
        output.writeString(2, getUid());
      }
      if (hasCreatedTime()) {
        output.writeString(3, getCreatedTime());
      }
      if (hasDays()) {
        output.writeString(4, getDays());
      }
      if (hasWeixin()) {
        output.writeString(5, getWeixin());
      }
      if (hasQq()) {
        output.writeString(6, getQq());
      }
      if (hasPhone()) {
        output.writeString(7, getPhone());
      }
      if (hasContent()) {
        output.writeString(8, getContent());
      }
      if (hasPostPlace()) {
        output.writeString(9, getPostPlace());
      }
      if (hasStartTime()) {
        output.writeString(10, getStartTime());
      }
      if (hasFinishTime()) {
        output.writeString(11, getFinishTime());
      }
      if (hasDest()) {
        output.writeString(12, getDest());
      }
      if (hasIsMy()) {
        output.writeBool(13, getIsMy());
      }
      if (hasIsLiked()) {
        output.writeBool(14, getIsLiked());
      }
      if (hasLikeNum()) {
        output.writeInt32(15, getLikeNum());
      }
      if (hasUserInfo()) {
        output.writeMessage(16, getUserInfo());
      }
      if (hasStatus()) {
        output.writeInt32(17, getStatus());
      }
      if (hasPv()) {
        output.writeInt32(18, getPv());
      }
      if (hasPostDetailInfo()) {
        output.writeMessage(19, getPostDetailInfo());
      }
      for (PostImg element : getImgsList()) {
        output.writeMessage(100, element);
      }
      for (String element : getPostTagList()) {
        output.writeString(101, element);
      }
    }
    
    private int cachedSize = -1;
    @Override
    public int getCachedSize() {
      if (cachedSize < 0) {
        // getSerializedSize sets cachedSize
        getSerializedSize();
      }
      return cachedSize;
    }
    
    @Override
    public int getSerializedSize() {
      int size = 0;
      if (hasId()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeStringSize(1, getId());
      }
      if (hasUid()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeStringSize(2, getUid());
      }
      if (hasCreatedTime()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeStringSize(3, getCreatedTime());
      }
      if (hasDays()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeStringSize(4, getDays());
      }
      if (hasWeixin()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeStringSize(5, getWeixin());
      }
      if (hasQq()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeStringSize(6, getQq());
      }
      if (hasPhone()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeStringSize(7, getPhone());
      }
      if (hasContent()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeStringSize(8, getContent());
      }
      if (hasPostPlace()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeStringSize(9, getPostPlace());
      }
      if (hasStartTime()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeStringSize(10, getStartTime());
      }
      if (hasFinishTime()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeStringSize(11, getFinishTime());
      }
      if (hasDest()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeStringSize(12, getDest());
      }
      if (hasIsMy()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeBoolSize(13, getIsMy());
      }
      if (hasIsLiked()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeBoolSize(14, getIsLiked());
      }
      if (hasLikeNum()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeInt32Size(15, getLikeNum());
      }
      if (hasUserInfo()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeMessageSize(16, getUserInfo());
      }
      if (hasStatus()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeInt32Size(17, getStatus());
      }
      if (hasPv()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeInt32Size(18, getPv());
      }
      if (hasPostDetailInfo()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeMessageSize(19, getPostDetailInfo());
      }
      for (PostImg element : getImgsList()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeMessageSize(100, element);
      }
      {
        int dataSize = 0;
        for (String element : getPostTagList()) {
          dataSize += com.google.protobuf.micro.CodedOutputStreamMicro
            .computeStringSizeNoTag(element);
        }
        size += dataSize;
        size += 2 * getPostTagList().size();
      }
      cachedSize = size;
      return size;
    }
    
    @Override
    public PostResponseInfo mergeFrom(
        com.google.protobuf.micro.CodedInputStreamMicro input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            setId(input.readString());
            break;
          }
          case 18: {
            setUid(input.readString());
            break;
          }
          case 26: {
            setCreatedTime(input.readString());
            break;
          }
          case 34: {
            setDays(input.readString());
            break;
          }
          case 42: {
            setWeixin(input.readString());
            break;
          }
          case 50: {
            setQq(input.readString());
            break;
          }
          case 58: {
            setPhone(input.readString());
            break;
          }
          case 66: {
            setContent(input.readString());
            break;
          }
          case 74: {
            setPostPlace(input.readString());
            break;
          }
          case 82: {
            setStartTime(input.readString());
            break;
          }
          case 90: {
            setFinishTime(input.readString());
            break;
          }
          case 98: {
            setDest(input.readString());
            break;
          }
          case 104: {
            setIsMy(input.readBool());
            break;
          }
          case 112: {
            setIsLiked(input.readBool());
            break;
          }
          case 120: {
            setLikeNum(input.readInt32());
            break;
          }
          case 130: {
            UserInfo value = new UserInfo();
            input.readMessage(value);
            setUserInfo(value);
            break;
          }
          case 136: {
              setStatus(input.readInt32());
            break;
          }
          case 144: {
            setPv(input.readInt32());
            break;
          }
          case 154: {
            PostDetailInfo value = new PostDetailInfo();
            input.readMessage(value);
            setPostDetailInfo(value);
            break;
          }
          case 802: {
            PostImg value = new PostImg();
            input.readMessage(value);
            addImgs(value);
            break;
          }
          case 810: {
            addPostTag(input.readString());
            break;
          }
        }
      }
    }
    
    public static PostResponseInfo parseFrom(byte[] data)
        throws com.google.protobuf.micro.InvalidProtocolBufferMicroException {
      return (PostResponseInfo) (new PostResponseInfo().mergeFrom(data));
    }
    
    public static PostResponseInfo parseFrom(
            com.google.protobuf.micro.CodedInputStreamMicro input)
        throws java.io.IOException {
      return new PostResponseInfo().mergeFrom(input);
    }
    
  }
  
  @SuppressWarnings("hiding")
  public static final class PostDetailInfo extends
      com.google.protobuf.micro.MessageMicro {
    public PostDetailInfo() {}
    
    // required .ShareInfo share_info = 1;
    public static final int SHARE_INFO_FIELD_NUMBER = 1;
    private boolean hasShareInfo;
    private ShareInfo shareInfo_ = null;
    public boolean hasShareInfo() { return hasShareInfo; }
    public ShareInfo getShareInfo() { return shareInfo_; }
    public PostDetailInfo setShareInfo(ShareInfo value) {
      if (value == null) {
        throw new NullPointerException();
      }
      hasShareInfo = true;
      shareInfo_ = value;
      return this;
    }
    public PostDetailInfo clearShareInfo() {
      hasShareInfo = false;
      shareInfo_ = null;
      return this;
    }
    
    // repeated .LikedMessage liked_message = 100;
    public static final int LIKED_MESSAGE_FIELD_NUMBER = 100;
    private java.util.List<LikedMessage> likedMessage_ =
      java.util.Collections.emptyList();
    public java.util.List<LikedMessage> getLikedMessageList() {
      return likedMessage_;
    }
    public int getLikedMessageCount() { return likedMessage_.size(); }
    public LikedMessage getLikedMessage(int index) {
      return likedMessage_.get(index);
    }
    public PostDetailInfo setLikedMessage(int index, LikedMessage value) {
      if (value == null) {
        throw new NullPointerException();
      }
      likedMessage_.set(index, value);
      return this;
    }
    public PostDetailInfo addLikedMessage(LikedMessage value) {
      if (value == null) {
        throw new NullPointerException();
      }
      if (likedMessage_.isEmpty()) {
        likedMessage_ = new java.util.ArrayList<LikedMessage>();
      }
      likedMessage_.add(value);
      return this;
    }
    public PostDetailInfo clearLikedMessage() {
      likedMessage_ = java.util.Collections.emptyList();
      return this;
    }
    
    public final PostDetailInfo clear() {
      clearShareInfo();
      clearLikedMessage();
      cachedSize = -1;
      return this;
    }
    
    public final boolean isInitialized() {
      if (!hasShareInfo) return false;
      if (!getShareInfo().isInitialized()) return false;
      for (LikedMessage element : getLikedMessageList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }
    
    @Override
    public void writeTo(com.google.protobuf.micro.CodedOutputStreamMicro output)
                        throws java.io.IOException {
      if (hasShareInfo()) {
        output.writeMessage(1, getShareInfo());
      }
      for (LikedMessage element : getLikedMessageList()) {
        output.writeMessage(100, element);
      }
    }
    
    private int cachedSize = -1;
    @Override
    public int getCachedSize() {
      if (cachedSize < 0) {
        // getSerializedSize sets cachedSize
        getSerializedSize();
      }
      return cachedSize;
    }
    
    @Override
    public int getSerializedSize() {
      int size = 0;
      if (hasShareInfo()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeMessageSize(1, getShareInfo());
      }
      for (LikedMessage element : getLikedMessageList()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeMessageSize(100, element);
      }
      cachedSize = size;
      return size;
    }
    
    @Override
    public PostDetailInfo mergeFrom(
        com.google.protobuf.micro.CodedInputStreamMicro input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            ShareInfo value = new ShareInfo();
            input.readMessage(value);
            setShareInfo(value);
            break;
          }
          case 802: {
            LikedMessage value = new LikedMessage();
            input.readMessage(value);
            addLikedMessage(value);
            break;
          }
        }
      }
    }
    
    public static PostDetailInfo parseFrom(byte[] data)
        throws com.google.protobuf.micro.InvalidProtocolBufferMicroException {
      return (PostDetailInfo) (new PostDetailInfo().mergeFrom(data));
    }
    
    public static PostDetailInfo parseFrom(
            com.google.protobuf.micro.CodedInputStreamMicro input)
        throws java.io.IOException {
      return new PostDetailInfo().mergeFrom(input);
    }
    
  }
  
  @SuppressWarnings("hiding")
  public static final class ShareInfo extends
      com.google.protobuf.micro.MessageMicro {
    public ShareInfo() {}
    
    // required string share_link = 1;
    public static final int SHARE_LINK_FIELD_NUMBER = 1;
    private boolean hasShareLink;
    private String shareLink_ = "";
    public String getShareLink() { return shareLink_; }
    public boolean hasShareLink() { return hasShareLink; }
    public ShareInfo setShareLink(String value) {
      hasShareLink = true;
      shareLink_ = value;
      return this;
    }
    public ShareInfo clearShareLink() {
      hasShareLink = false;
      shareLink_ = "";
      return this;
    }
    
    // required string share_ico = 2;
    public static final int SHARE_ICO_FIELD_NUMBER = 2;
    private boolean hasShareIco;
    private String shareIco_ = "";
    public String getShareIco() { return shareIco_; }
    public boolean hasShareIco() { return hasShareIco; }
    public ShareInfo setShareIco(String value) {
      hasShareIco = true;
      shareIco_ = value;
      return this;
    }
    public ShareInfo clearShareIco() {
      hasShareIco = false;
      shareIco_ = "";
      return this;
    }
    
    // required string share_title = 3;
    public static final int SHARE_TITLE_FIELD_NUMBER = 3;
    private boolean hasShareTitle;
    private String shareTitle_ = "";
    public String getShareTitle() { return shareTitle_; }
    public boolean hasShareTitle() { return hasShareTitle; }
    public ShareInfo setShareTitle(String value) {
      hasShareTitle = true;
      shareTitle_ = value;
      return this;
    }
    public ShareInfo clearShareTitle() {
      hasShareTitle = false;
      shareTitle_ = "";
      return this;
    }
    
    // required string share_desc = 4;
    public static final int SHARE_DESC_FIELD_NUMBER = 4;
    private boolean hasShareDesc;
    private String shareDesc_ = "";
    public String getShareDesc() { return shareDesc_; }
    public boolean hasShareDesc() { return hasShareDesc; }
    public ShareInfo setShareDesc(String value) {
      hasShareDesc = true;
      shareDesc_ = value;
      return this;
    }
    public ShareInfo clearShareDesc() {
      hasShareDesc = false;
      shareDesc_ = "";
      return this;
    }
    
    public final ShareInfo clear() {
      clearShareLink();
      clearShareIco();
      clearShareTitle();
      clearShareDesc();
      cachedSize = -1;
      return this;
    }
    
    public final boolean isInitialized() {
      if (!hasShareLink) return false;
      if (!hasShareIco) return false;
      if (!hasShareTitle) return false;
      if (!hasShareDesc) return false;
      return true;
    }
    
    @Override
    public void writeTo(com.google.protobuf.micro.CodedOutputStreamMicro output)
                        throws java.io.IOException {
      if (hasShareLink()) {
        output.writeString(1, getShareLink());
      }
      if (hasShareIco()) {
        output.writeString(2, getShareIco());
      }
      if (hasShareTitle()) {
        output.writeString(3, getShareTitle());
      }
      if (hasShareDesc()) {
        output.writeString(4, getShareDesc());
      }
    }
    
    private int cachedSize = -1;
    @Override
    public int getCachedSize() {
      if (cachedSize < 0) {
        // getSerializedSize sets cachedSize
        getSerializedSize();
      }
      return cachedSize;
    }
    
    @Override
    public int getSerializedSize() {
      int size = 0;
      if (hasShareLink()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeStringSize(1, getShareLink());
      }
      if (hasShareIco()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeStringSize(2, getShareIco());
      }
      if (hasShareTitle()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeStringSize(3, getShareTitle());
      }
      if (hasShareDesc()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeStringSize(4, getShareDesc());
      }
      cachedSize = size;
      return size;
    }
    
    @Override
    public ShareInfo mergeFrom(
        com.google.protobuf.micro.CodedInputStreamMicro input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            setShareLink(input.readString());
            break;
          }
          case 18: {
            setShareIco(input.readString());
            break;
          }
          case 26: {
            setShareTitle(input.readString());
            break;
          }
          case 34: {
            setShareDesc(input.readString());
            break;
          }
        }
      }
    }
    
    public static ShareInfo parseFrom(byte[] data)
        throws com.google.protobuf.micro.InvalidProtocolBufferMicroException {
      return (ShareInfo) (new ShareInfo().mergeFrom(data));
    }
    
    public static ShareInfo parseFrom(
            com.google.protobuf.micro.CodedInputStreamMicro input)
        throws java.io.IOException {
      return new ShareInfo().mergeFrom(input);
    }
    
  }
  
  @SuppressWarnings("hiding")
  public static final class PostImg extends
      com.google.protobuf.micro.MessageMicro {
    public PostImg() {}
    
    // required string thumb = 1;
    public static final int THUMB_FIELD_NUMBER = 1;
    private boolean hasThumb;
    private String thumb_ = "";
    public String getThumb() { return thumb_; }
    public boolean hasThumb() { return hasThumb; }
    public PostImg setThumb(String value) {
      hasThumb = true;
      thumb_ = value;
      return this;
    }
    public PostImg clearThumb() {
      hasThumb = false;
      thumb_ = "";
      return this;
    }
    
    // required string preview = 2;
    public static final int PREVIEW_FIELD_NUMBER = 2;
    private boolean hasPreview;
    private String preview_ = "";
    public String getPreview() { return preview_; }
    public boolean hasPreview() { return hasPreview; }
    public PostImg setPreview(String value) {
      hasPreview = true;
      preview_ = value;
      return this;
    }
    public PostImg clearPreview() {
      hasPreview = false;
      preview_ = "";
      return this;
    }
    
    public final PostImg clear() {
      clearThumb();
      clearPreview();
      cachedSize = -1;
      return this;
    }
    
    public final boolean isInitialized() {
      if (!hasThumb) return false;
      if (!hasPreview) return false;
      return true;
    }
    
    @Override
    public void writeTo(com.google.protobuf.micro.CodedOutputStreamMicro output)
                        throws java.io.IOException {
      if (hasThumb()) {
        output.writeString(1, getThumb());
      }
      if (hasPreview()) {
        output.writeString(2, getPreview());
      }
    }
    
    private int cachedSize = -1;
    @Override
    public int getCachedSize() {
      if (cachedSize < 0) {
        // getSerializedSize sets cachedSize
        getSerializedSize();
      }
      return cachedSize;
    }
    
    @Override
    public int getSerializedSize() {
      int size = 0;
      if (hasThumb()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeStringSize(1, getThumb());
      }
      if (hasPreview()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeStringSize(2, getPreview());
      }
      cachedSize = size;
      return size;
    }
    
    @Override
    public PostImg mergeFrom(
        com.google.protobuf.micro.CodedInputStreamMicro input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            setThumb(input.readString());
            break;
          }
          case 18: {
            setPreview(input.readString());
            break;
          }
        }
      }
    }
    
    public static PostImg parseFrom(byte[] data)
        throws com.google.protobuf.micro.InvalidProtocolBufferMicroException {
      return (PostImg) (new PostImg().mergeFrom(data));
    }
    
    public static PostImg parseFrom(
            com.google.protobuf.micro.CodedInputStreamMicro input)
        throws java.io.IOException {
      return new PostImg().mergeFrom(input);
    }
    
  }
  
  @SuppressWarnings("hiding")
  public static final class UserInfoList extends
      com.google.protobuf.micro.MessageMicro {
    public UserInfoList() {}
    
    // required .PageResponseInfo page_response_info = 1;
    public static final int PAGE_RESPONSE_INFO_FIELD_NUMBER = 1;
    private boolean hasPageResponseInfo;
    private PageResponseInfo pageResponseInfo_ = null;
    public boolean hasPageResponseInfo() { return hasPageResponseInfo; }
    public PageResponseInfo getPageResponseInfo() { return pageResponseInfo_; }
    public UserInfoList setPageResponseInfo(PageResponseInfo value) {
      if (value == null) {
        throw new NullPointerException();
      }
      hasPageResponseInfo = true;
      pageResponseInfo_ = value;
      return this;
    }
    public UserInfoList clearPageResponseInfo() {
      hasPageResponseInfo = false;
      pageResponseInfo_ = null;
      return this;
    }
    
    // repeated .UserInfo user_infos = 100;
    public static final int USER_INFOS_FIELD_NUMBER = 100;
    private java.util.List<UserInfo> userInfos_ =
      java.util.Collections.emptyList();
    public java.util.List<UserInfo> getUserInfosList() {
      return userInfos_;
    }
    public int getUserInfosCount() { return userInfos_.size(); }
    public UserInfo getUserInfos(int index) {
      return userInfos_.get(index);
    }
    public UserInfoList setUserInfos(int index, UserInfo value) {
      if (value == null) {
        throw new NullPointerException();
      }
      userInfos_.set(index, value);
      return this;
    }
    public UserInfoList addUserInfos(UserInfo value) {
      if (value == null) {
        throw new NullPointerException();
      }
      if (userInfos_.isEmpty()) {
        userInfos_ = new java.util.ArrayList<UserInfo>();
      }
      userInfos_.add(value);
      return this;
    }
    public UserInfoList clearUserInfos() {
      userInfos_ = java.util.Collections.emptyList();
      return this;
    }
    
    public final UserInfoList clear() {
      clearPageResponseInfo();
      clearUserInfos();
      cachedSize = -1;
      return this;
    }
    
    public final boolean isInitialized() {
      if (!hasPageResponseInfo) return false;
      if (!getPageResponseInfo().isInitialized()) return false;
      for (UserInfo element : getUserInfosList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }
    
    @Override
    public void writeTo(com.google.protobuf.micro.CodedOutputStreamMicro output)
                        throws java.io.IOException {
      if (hasPageResponseInfo()) {
        output.writeMessage(1, getPageResponseInfo());
      }
      for (UserInfo element : getUserInfosList()) {
        output.writeMessage(100, element);
      }
    }
    
    private int cachedSize = -1;
    @Override
    public int getCachedSize() {
      if (cachedSize < 0) {
        // getSerializedSize sets cachedSize
        getSerializedSize();
      }
      return cachedSize;
    }
    
    @Override
    public int getSerializedSize() {
      int size = 0;
      if (hasPageResponseInfo()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeMessageSize(1, getPageResponseInfo());
      }
      for (UserInfo element : getUserInfosList()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeMessageSize(100, element);
      }
      cachedSize = size;
      return size;
    }
    
    @Override
    public UserInfoList mergeFrom(
        com.google.protobuf.micro.CodedInputStreamMicro input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            PageResponseInfo value = new PageResponseInfo();
            input.readMessage(value);
            setPageResponseInfo(value);
            break;
          }
          case 802: {
            UserInfo value = new UserInfo();
            input.readMessage(value);
            addUserInfos(value);
            break;
          }
        }
      }
    }
    
    public static UserInfoList parseFrom(byte[] data)
        throws com.google.protobuf.micro.InvalidProtocolBufferMicroException {
      return (UserInfoList) (new UserInfoList().mergeFrom(data));
    }
    
    public static UserInfoList parseFrom(
            com.google.protobuf.micro.CodedInputStreamMicro input)
        throws java.io.IOException {
      return new UserInfoList().mergeFrom(input);
    }
    
  }
  
  @SuppressWarnings("hiding")
  public static final class UserInfo extends
      com.google.protobuf.micro.MessageMicro {
    public UserInfo() {}
    
    // required string id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private boolean hasId;
    private String id_ = "123";
    public String getId() { return id_; }
    public boolean hasId() { return hasId; }
    public UserInfo setId(String value) {
      hasId = true;
      id_ = value;
      return this;
    }
    public UserInfo clearId() {
      hasId = false;
      id_ = "";
      return this;
    }
    
    // required string head_img_url = 2;
    public static final int HEAD_IMG_URL_FIELD_NUMBER = 2;
    private boolean hasHeadImgUrl;
    private String headImgUrl_ = "";
    public String getHeadImgUrl() { return headImgUrl_; }
    public boolean hasHeadImgUrl() { return hasHeadImgUrl; }
    public UserInfo setHeadImgUrl(String value) {
      hasHeadImgUrl = true;
      headImgUrl_ = value;
      return this;
    }
    public UserInfo clearHeadImgUrl() {
      hasHeadImgUrl = false;
      headImgUrl_ = "";
      return this;
    }
    
    // required string nick_name = 3;
    public static final int NICK_NAME_FIELD_NUMBER = 3;
    private boolean hasNickName;
    private String nickName_ = "hello";
    public String getNickName() { return nickName_; }
    public boolean hasNickName() { return hasNickName; }
    public UserInfo setNickName(String value) {
      hasNickName = true;
      nickName_ = value;
      return this;
    }
    public UserInfo clearNickName() {
      hasNickName = false;
      nickName_ = "";
      return this;
    }
    
    // required int32 sex = 4;
    public static final int SEX_FIELD_NUMBER = 4;
    private boolean hasSex;
    private int sex_ = 0;
    public int getSex() { return sex_; }
    public boolean hasSex() { return hasSex; }
    public UserInfo setSex(int value) {
      hasSex = true;
      sex_ = value;
      return this;
    }
    public UserInfo clearSex() {
      hasSex = false;
      sex_ = 0;
      return this;
    }
    
    // required int32 age = 5;
    public static final int AGE_FIELD_NUMBER = 5;
    private boolean hasAge;
    private int age_ = 0;
    public int getAge() { return age_; }
    public boolean hasAge() { return hasAge; }
    public UserInfo setAge(int value) {
      hasAge = true;
      age_ = value;
      return this;
    }
    public UserInfo clearAge() {
      hasAge = false;
      age_ = 0;
      return this;
    }
    
    // required string weixin = 6;
    public static final int WEIXIN_FIELD_NUMBER = 6;
    private boolean hasWeixin;
    private String weixin_ = "";
    public String getWeixin() { return weixin_; }
    public boolean hasWeixin() { return hasWeixin; }
    public UserInfo setWeixin(String value) {
      hasWeixin = true;
      weixin_ = value;
      return this;
    }
    public UserInfo clearWeixin() {
      hasWeixin = false;
      weixin_ = "";
      return this;
    }
    
    // required string qq = 7;
    public static final int QQ_FIELD_NUMBER = 7;
    private boolean hasQq;
    private String qq_ = "10001";
    public String getQq() { return qq_; }
    public boolean hasQq() { return hasQq; }
    public UserInfo setQq(String value) {
      hasQq = true;
      qq_ = value;
      return this;
    }
    public UserInfo clearQq() {
      hasQq = false;
      qq_ = "";
      return this;
    }
    
    // required string phone = 8;
    public static final int PHONE_FIELD_NUMBER = 8;
    private boolean hasPhone;
    private String phone_ = "18512345678";
    public String getPhone() { return phone_; }
    public boolean hasPhone() { return hasPhone; }
    public UserInfo setPhone(String value) {
      hasPhone = true;
      phone_ = value;
      return this;
    }
    public UserInfo clearPhone() {
      hasPhone = false;
      phone_ = "";
      return this;
    }
    
    // optional bool is_complete = 9;
    public static final int IS_COMPLETE_FIELD_NUMBER = 9;
    private boolean hasIsComplete;
    private boolean isComplete_ = false;
    public boolean getIsComplete() { return isComplete_; }
    public boolean hasIsComplete() { return hasIsComplete; }
    public UserInfo setIsComplete(boolean value) {
      hasIsComplete = true;
      isComplete_ = value;
      return this;
    }
    public UserInfo clearIsComplete() {
      hasIsComplete = false;
      isComplete_ = false;
      return this;
    }
    
    // required int32 visible_item = 10;
    public static final int VISIBLE_ITEM_FIELD_NUMBER = 10;
    private boolean hasVisibleItem;
    private int visibleItem_ = 0;
    public int getVisibleItem() { return visibleItem_; }
    public boolean hasVisibleItem() { return hasVisibleItem; }
    public UserInfo setVisibleItem(int value) {
      hasVisibleItem = true;
      visibleItem_ = value;
      return this;
    }
    public UserInfo clearVisibleItem() {
      hasVisibleItem = false;
      visibleItem_ = 0;
      return this;
    }
    
    // required bool group_visible = 11;
    public static final int GROUP_VISIBLE_FIELD_NUMBER = 11;
    private boolean hasGroupVisible;
    private boolean groupVisible_ = false;
    public boolean getGroupVisible() { return groupVisible_; }
    public boolean hasGroupVisible() { return hasGroupVisible; }
    public UserInfo setGroupVisible(boolean value) {
      hasGroupVisible = true;
      groupVisible_ = value;
      return this;
    }
    public UserInfo clearGroupVisible() {
      hasGroupVisible = false;
      groupVisible_ = false;
      return this;
    }
    
    // required string head_img_url_origin = 12;
    public static final int HEAD_IMG_URL_ORIGIN_FIELD_NUMBER = 12;
    private boolean hasHeadImgUrlOrigin;
    private String headImgUrlOrigin_ = "";
    public String getHeadImgUrlOrigin() { return headImgUrlOrigin_; }
    public boolean hasHeadImgUrlOrigin() { return hasHeadImgUrlOrigin; }
    public UserInfo setHeadImgUrlOrigin(String value) {
      hasHeadImgUrlOrigin = true;
      headImgUrlOrigin_ = value;
      return this;
    }
    public UserInfo clearHeadImgUrlOrigin() {
      hasHeadImgUrlOrigin = false;
      headImgUrlOrigin_ = "";
      return this;
    }
    
    public final UserInfo clear() {
      clearId();
      clearHeadImgUrl();
      clearNickName();
      clearSex();
      clearAge();
      clearWeixin();
      clearQq();
      clearPhone();
      clearIsComplete();
      clearVisibleItem();
      clearGroupVisible();
      clearHeadImgUrlOrigin();
      cachedSize = -1;
      return this;
    }
    
    public final boolean isInitialized() {
      if (!hasId) return false;
      if (!hasHeadImgUrl) return false;
      if (!hasNickName) return false;
      if (!hasSex) return false;
      if (!hasAge) return false;
      if (!hasWeixin) return false;
      if (!hasQq) return false;
      if (!hasPhone) return false;
      if (!hasVisibleItem) return false;
      if (!hasGroupVisible) return false;
      if (!hasHeadImgUrlOrigin) return false;
      return true;
    }
    
    @Override
    public void writeTo(com.google.protobuf.micro.CodedOutputStreamMicro output)
                        throws java.io.IOException {
      if (hasId()) {
        output.writeString(1, getId());
      }
      if (hasHeadImgUrl()) {
        output.writeString(2, getHeadImgUrl());
      }
      if (hasNickName()) {
        output.writeString(3, getNickName());
      }
      if (hasSex()) {
        output.writeInt32(4, getSex());
      }
      if (hasAge()) {
        output.writeInt32(5, getAge());
      }
      if (hasWeixin()) {
        output.writeString(6, getWeixin());
      }
      if (hasQq()) {
        output.writeString(7, getQq());
      }
      if (hasPhone()) {
        output.writeString(8, getPhone());
      }
      if (hasIsComplete()) {
        output.writeBool(9, getIsComplete());
      }
      if (hasVisibleItem()) {
        output.writeInt32(10, getVisibleItem());
      }
      if (hasGroupVisible()) {
        output.writeBool(11, getGroupVisible());
      }
      if (hasHeadImgUrlOrigin()) {
        output.writeString(12, getHeadImgUrlOrigin());
      }
    }
    
    private int cachedSize = -1;
    @Override
    public int getCachedSize() {
      if (cachedSize < 0) {
        // getSerializedSize sets cachedSize
        getSerializedSize();
      }
      return cachedSize;
    }
    
    @Override
    public int getSerializedSize() {
      int size = 0;
      if (hasId()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeStringSize(1, getId());
      }
      if (hasHeadImgUrl()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeStringSize(2, getHeadImgUrl());
      }
      if (hasNickName()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeStringSize(3, getNickName());
      }
      if (hasSex()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeInt32Size(4, getSex());
      }
      if (hasAge()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeInt32Size(5, getAge());
      }
      if (hasWeixin()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeStringSize(6, getWeixin());
      }
      if (hasQq()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeStringSize(7, getQq());
      }
      if (hasPhone()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeStringSize(8, getPhone());
      }
      if (hasIsComplete()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeBoolSize(9, getIsComplete());
      }
      if (hasVisibleItem()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeInt32Size(10, getVisibleItem());
      }
      if (hasGroupVisible()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeBoolSize(11, getGroupVisible());
      }
      if (hasHeadImgUrlOrigin()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeStringSize(12, getHeadImgUrlOrigin());
      }
      cachedSize = size;
      return size;
    }
    
    @Override
    public UserInfo mergeFrom(
        com.google.protobuf.micro.CodedInputStreamMicro input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            setId(input.readString());
            break;
          }
          case 18: {
            setHeadImgUrl(input.readString());
            break;
          }
          case 26: {
            setNickName(input.readString());
            break;
          }
          case 32: {
            setSex(input.readInt32());
            break;
          }
          case 40: {
            setAge(input.readInt32());
            break;
          }
          case 50: {
            setWeixin(input.readString());
            break;
          }
          case 58: {
            setQq(input.readString());
            break;
          }
          case 66: {
            setPhone(input.readString());
            break;
          }
          case 72: {
            setIsComplete(input.readBool());
            break;
          }
          case 80: {
            setVisibleItem(input.readInt32());
            break;
          }
          case 88: {
            setGroupVisible(input.readBool());
            break;
          }
          case 98: {
            setHeadImgUrlOrigin(input.readString());
            break;
          }
        }
      }
    }
    
    public static UserInfo parseFrom(byte[] data)
        throws com.google.protobuf.micro.InvalidProtocolBufferMicroException {
      return (UserInfo) (new UserInfo().mergeFrom(data));
    }
    
    public static UserInfo parseFrom(
            com.google.protobuf.micro.CodedInputStreamMicro input)
        throws java.io.IOException {
      return new UserInfo().mergeFrom(input);
    }
    
  }
  
  @SuppressWarnings("hiding")
  public static final class ClientUpdateInfo extends
      com.google.protobuf.micro.MessageMicro {
    public ClientUpdateInfo() {}
    
    // required bool need_update = 1;
    public static final int NEED_UPDATE_FIELD_NUMBER = 1;
    private boolean hasNeedUpdate;
    private boolean needUpdate_ = false;
    public boolean getNeedUpdate() { return needUpdate_; }
    public boolean hasNeedUpdate() { return hasNeedUpdate; }
    public ClientUpdateInfo setNeedUpdate(boolean value) {
      hasNeedUpdate = true;
      needUpdate_ = value;
      return this;
    }
    public ClientUpdateInfo clearNeedUpdate() {
      hasNeedUpdate = false;
      needUpdate_ = false;
      return this;
    }
    
    // optional string latest_version_name = 2;
    public static final int LATEST_VERSION_NAME_FIELD_NUMBER = 2;
    private boolean hasLatestVersionName;
    private String latestVersionName_ = "";
    public String getLatestVersionName() { return latestVersionName_; }
    public boolean hasLatestVersionName() { return hasLatestVersionName; }
    public ClientUpdateInfo setLatestVersionName(String value) {
      hasLatestVersionName = true;
      latestVersionName_ = value;
      return this;
    }
    public ClientUpdateInfo clearLatestVersionName() {
      hasLatestVersionName = false;
      latestVersionName_ = "";
      return this;
    }
    
    // optional string latest_version_url = 3;
    public static final int LATEST_VERSION_URL_FIELD_NUMBER = 3;
    private boolean hasLatestVersionUrl;
    private String latestVersionUrl_ = "";
    public String getLatestVersionUrl() { return latestVersionUrl_; }
    public boolean hasLatestVersionUrl() { return hasLatestVersionUrl; }
    public ClientUpdateInfo setLatestVersionUrl(String value) {
      hasLatestVersionUrl = true;
      latestVersionUrl_ = value;
      return this;
    }
    public ClientUpdateInfo clearLatestVersionUrl() {
      hasLatestVersionUrl = false;
      latestVersionUrl_ = "";
      return this;
    }
    
    public final ClientUpdateInfo clear() {
      clearNeedUpdate();
      clearLatestVersionName();
      clearLatestVersionUrl();
      cachedSize = -1;
      return this;
    }
    
    public final boolean isInitialized() {
      if (!hasNeedUpdate) return false;
      return true;
    }
    
    @Override
    public void writeTo(com.google.protobuf.micro.CodedOutputStreamMicro output)
                        throws java.io.IOException {
      if (hasNeedUpdate()) {
        output.writeBool(1, getNeedUpdate());
      }
      if (hasLatestVersionName()) {
        output.writeString(2, getLatestVersionName());
      }
      if (hasLatestVersionUrl()) {
        output.writeString(3, getLatestVersionUrl());
      }
    }
    
    private int cachedSize = -1;
    @Override
    public int getCachedSize() {
      if (cachedSize < 0) {
        // getSerializedSize sets cachedSize
        getSerializedSize();
      }
      return cachedSize;
    }
    
    @Override
    public int getSerializedSize() {
      int size = 0;
      if (hasNeedUpdate()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeBoolSize(1, getNeedUpdate());
      }
      if (hasLatestVersionName()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeStringSize(2, getLatestVersionName());
      }
      if (hasLatestVersionUrl()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeStringSize(3, getLatestVersionUrl());
      }
      cachedSize = size;
      return size;
    }
    
    @Override
    public ClientUpdateInfo mergeFrom(
        com.google.protobuf.micro.CodedInputStreamMicro input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            setNeedUpdate(input.readBool());
            break;
          }
          case 18: {
            setLatestVersionName(input.readString());
            break;
          }
          case 26: {
            setLatestVersionUrl(input.readString());
            break;
          }
        }
      }
    }
    
    public static ClientUpdateInfo parseFrom(byte[] data)
        throws com.google.protobuf.micro.InvalidProtocolBufferMicroException {
      return (ClientUpdateInfo) (new ClientUpdateInfo().mergeFrom(data));
    }
    
    public static ClientUpdateInfo parseFrom(
            com.google.protobuf.micro.CodedInputStreamMicro input)
        throws java.io.IOException {
      return new ClientUpdateInfo().mergeFrom(input);
    }
    
  }
  
  @SuppressWarnings("hiding")
  public static final class LikedMessageList extends
      com.google.protobuf.micro.MessageMicro {
    public LikedMessageList() {}
    
    // required .PageResponseInfo page_response_info = 1;
    public static final int PAGE_RESPONSE_INFO_FIELD_NUMBER = 1;
    private boolean hasPageResponseInfo;
    private PageResponseInfo pageResponseInfo_ = null;
    public boolean hasPageResponseInfo() { return hasPageResponseInfo; }
    public PageResponseInfo getPageResponseInfo() { return pageResponseInfo_; }
    public LikedMessageList setPageResponseInfo(PageResponseInfo value) {
      if (value == null) {
        throw new NullPointerException();
      }
      hasPageResponseInfo = true;
      pageResponseInfo_ = value;
      return this;
    }
    public LikedMessageList clearPageResponseInfo() {
      hasPageResponseInfo = false;
      pageResponseInfo_ = null;
      return this;
    }
    
    // repeated .LikedMessage liked_message = 2;
    public static final int LIKED_MESSAGE_FIELD_NUMBER = 2;
    private java.util.List<LikedMessage> likedMessage_ =
      java.util.Collections.emptyList();
    public java.util.List<LikedMessage> getLikedMessageList() {
      return likedMessage_;
    }
    public int getLikedMessageCount() { return likedMessage_.size(); }
    public LikedMessage getLikedMessage(int index) {
      return likedMessage_.get(index);
    }
    public LikedMessageList setLikedMessage(int index, LikedMessage value) {
      if (value == null) {
        throw new NullPointerException();
      }
      likedMessage_.set(index, value);
      return this;
    }
    public LikedMessageList addLikedMessage(LikedMessage value) {
      if (value == null) {
        throw new NullPointerException();
      }
      if (likedMessage_.isEmpty()) {
        likedMessage_ = new java.util.ArrayList<LikedMessage>();
      }
      likedMessage_.add(value);
      return this;
    }
    public LikedMessageList clearLikedMessage() {
      likedMessage_ = java.util.Collections.emptyList();
      return this;
    }
    
    public final LikedMessageList clear() {
      clearPageResponseInfo();
      clearLikedMessage();
      cachedSize = -1;
      return this;
    }
    
    public final boolean isInitialized() {
      if (!hasPageResponseInfo) return false;
      if (!getPageResponseInfo().isInitialized()) return false;
      for (LikedMessage element : getLikedMessageList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }
    
    @Override
    public void writeTo(com.google.protobuf.micro.CodedOutputStreamMicro output)
                        throws java.io.IOException {
      if (hasPageResponseInfo()) {
        output.writeMessage(1, getPageResponseInfo());
      }
      for (LikedMessage element : getLikedMessageList()) {
        output.writeMessage(2, element);
      }
    }
    
    private int cachedSize = -1;
    @Override
    public int getCachedSize() {
      if (cachedSize < 0) {
        // getSerializedSize sets cachedSize
        getSerializedSize();
      }
      return cachedSize;
    }
    
    @Override
    public int getSerializedSize() {
      int size = 0;
      if (hasPageResponseInfo()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeMessageSize(1, getPageResponseInfo());
      }
      for (LikedMessage element : getLikedMessageList()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeMessageSize(2, element);
      }
      cachedSize = size;
      return size;
    }
    
    @Override
    public LikedMessageList mergeFrom(
        com.google.protobuf.micro.CodedInputStreamMicro input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            PageResponseInfo value = new PageResponseInfo();
            input.readMessage(value);
            setPageResponseInfo(value);
            break;
          }
          case 18: {
            LikedMessage value = new LikedMessage();
            input.readMessage(value);
            addLikedMessage(value);
            break;
          }
        }
      }
    }
    
    public static LikedMessageList parseFrom(byte[] data)
        throws com.google.protobuf.micro.InvalidProtocolBufferMicroException {
      return (LikedMessageList) (new LikedMessageList().mergeFrom(data));
    }
    
    public static LikedMessageList parseFrom(
            com.google.protobuf.micro.CodedInputStreamMicro input)
        throws java.io.IOException {
      return new LikedMessageList().mergeFrom(input);
    }
    
  }
  
  @SuppressWarnings("hiding")
  public static final class LikedMessage extends
      com.google.protobuf.micro.MessageMicro {
    public LikedMessage() {}
    
    // required string id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private boolean hasId;
    private String id_ = "";
    public String getId() { return id_; }
    public boolean hasId() { return hasId; }
    public LikedMessage setId(String value) {
      hasId = true;
      id_ = value;
      return this;
    }
    public LikedMessage clearId() {
      hasId = false;
      id_ = "";
      return this;
    }
    
    // required .UserInfo user_info = 2;
    public static final int USER_INFO_FIELD_NUMBER = 2;
    private boolean hasUserInfo;
    private UserInfo userInfo_ = null;
    public boolean hasUserInfo() { return hasUserInfo; }
    public UserInfo getUserInfo() { return userInfo_; }
    public LikedMessage setUserInfo(UserInfo value) {
      if (value == null) {
        throw new NullPointerException();
      }
      hasUserInfo = true;
      userInfo_ = value;
      return this;
    }
    public LikedMessage clearUserInfo() {
      hasUserInfo = false;
      userInfo_ = null;
      return this;
    }
    
    // required string dest = 3;
    public static final int DEST_FIELD_NUMBER = 3;
    private boolean hasDest;
    private String dest_ = "";
    public String getDest() { return dest_; }
    public boolean hasDest() { return hasDest; }
    public LikedMessage setDest(String value) {
      hasDest = true;
      dest_ = value;
      return this;
    }
    public LikedMessage clearDest() {
      hasDest = false;
      dest_ = "";
      return this;
    }
    
    // required int32 is_read = 4;
    public static final int IS_READ_FIELD_NUMBER = 4;
    private boolean hasIsRead;
    private int isRead_ = 0;
    public int getIsRead() { return isRead_; }
    public boolean hasIsRead() { return hasIsRead; }
    public LikedMessage setIsRead(int value) {
      hasIsRead = true;
      isRead_ = value;
      return this;
    }
    public LikedMessage clearIsRead() {
      hasIsRead = false;
      isRead_ = 0;
      return this;
    }
    
    // required string created_at = 5;
    public static final int CREATED_AT_FIELD_NUMBER = 5;
    private boolean hasCreatedAt;
    private String createdAt_ = "";
    public String getCreatedAt() { return createdAt_; }
    public boolean hasCreatedAt() { return hasCreatedAt; }
    public LikedMessage setCreatedAt(String value) {
      hasCreatedAt = true;
      createdAt_ = value;
      return this;
    }
    public LikedMessage clearCreatedAt() {
      hasCreatedAt = false;
      createdAt_ = "";
      return this;
    }
    
    // required string post_id = 6;
    public static final int POST_ID_FIELD_NUMBER = 6;
    private boolean hasPostId;
    private String postId_ = "";
    public String getPostId() { return postId_; }
    public boolean hasPostId() { return hasPostId; }
    public LikedMessage setPostId(String value) {
      hasPostId = true;
      postId_ = value;
      return this;
    }
    public LikedMessage clearPostId() {
      hasPostId = false;
      postId_ = "";
      return this;
    }
    
    public final LikedMessage clear() {
      clearId();
      clearUserInfo();
      clearDest();
      clearIsRead();
      clearCreatedAt();
      clearPostId();
      cachedSize = -1;
      return this;
    }
    
    public final boolean isInitialized() {
      if (!hasId) return false;
      if (!hasUserInfo) return false;
      if (!hasDest) return false;
      if (!hasIsRead) return false;
      if (!hasCreatedAt) return false;
      if (!hasPostId) return false;
      if (!getUserInfo().isInitialized()) return false;
      return true;
    }
    
    @Override
    public void writeTo(com.google.protobuf.micro.CodedOutputStreamMicro output)
                        throws java.io.IOException {
      if (hasId()) {
        output.writeString(1, getId());
      }
      if (hasUserInfo()) {
        output.writeMessage(2, getUserInfo());
      }
      if (hasDest()) {
        output.writeString(3, getDest());
      }
      if (hasIsRead()) {
        output.writeInt32(4, getIsRead());
      }
      if (hasCreatedAt()) {
        output.writeString(5, getCreatedAt());
      }
      if (hasPostId()) {
        output.writeString(6, getPostId());
      }
    }
    
    private int cachedSize = -1;
    @Override
    public int getCachedSize() {
      if (cachedSize < 0) {
        // getSerializedSize sets cachedSize
        getSerializedSize();
      }
      return cachedSize;
    }
    
    @Override
    public int getSerializedSize() {
      int size = 0;
      if (hasId()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeStringSize(1, getId());
      }
      if (hasUserInfo()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeMessageSize(2, getUserInfo());
      }
      if (hasDest()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeStringSize(3, getDest());
      }
      if (hasIsRead()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeInt32Size(4, getIsRead());
      }
      if (hasCreatedAt()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeStringSize(5, getCreatedAt());
      }
      if (hasPostId()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeStringSize(6, getPostId());
      }
      cachedSize = size;
      return size;
    }
    
    @Override
    public LikedMessage mergeFrom(
        com.google.protobuf.micro.CodedInputStreamMicro input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            setId(input.readString());
            break;
          }
          case 18: {
            UserInfo value = new UserInfo();
            input.readMessage(value);
            setUserInfo(value);
            break;
          }
          case 26: {
            setDest(input.readString());
            break;
          }
          case 32: {
            setIsRead(input.readInt32());
            break;
          }
          case 42: {
            setCreatedAt(input.readString());
            break;
          }
          case 50: {
            setPostId(input.readString());
            break;
          }
        }
      }
    }
    
    public static LikedMessage parseFrom(byte[] data)
        throws com.google.protobuf.micro.InvalidProtocolBufferMicroException {
      return (LikedMessage) (new LikedMessage().mergeFrom(data));
    }
    
    public static LikedMessage parseFrom(
            com.google.protobuf.micro.CodedInputStreamMicro input)
        throws java.io.IOException {
      return new LikedMessage().mergeFrom(input);
    }
    
  }
  
  @SuppressWarnings("hiding")
  public static final class WannaJoinResponse extends
      com.google.protobuf.micro.MessageMicro {
    public WannaJoinResponse() {}
    
    // required int32 wanna_join_num = 1;
    public static final int WANNA_JOIN_NUM_FIELD_NUMBER = 1;
    private boolean hasWannaJoinNum;
    private int wannaJoinNum_ = 0;
    public int getWannaJoinNum() { return wannaJoinNum_; }
    public boolean hasWannaJoinNum() { return hasWannaJoinNum; }
    public WannaJoinResponse setWannaJoinNum(int value) {
      hasWannaJoinNum = true;
      wannaJoinNum_ = value;
      return this;
    }
    public WannaJoinResponse clearWannaJoinNum() {
      hasWannaJoinNum = false;
      wannaJoinNum_ = 0;
      return this;
    }
    
    // required int32 wanna_join_state = 2;
    public static final int WANNA_JOIN_STATE_FIELD_NUMBER = 2;
    private boolean hasWannaJoinState;
    private int wannaJoinState_ = 0;
    public int getWannaJoinState() { return wannaJoinState_; }
    public boolean hasWannaJoinState() { return hasWannaJoinState; }
    public WannaJoinResponse setWannaJoinState(int value) {
      hasWannaJoinState = true;
      wannaJoinState_ = value;
      return this;
    }
    public WannaJoinResponse clearWannaJoinState() {
      hasWannaJoinState = false;
      wannaJoinState_ = 0;
      return this;
    }
    
    public final WannaJoinResponse clear() {
      clearWannaJoinNum();
      clearWannaJoinState();
      cachedSize = -1;
      return this;
    }
    
    public final boolean isInitialized() {
      if (!hasWannaJoinNum) return false;
      if (!hasWannaJoinState) return false;
      return true;
    }
    
    @Override
    public void writeTo(com.google.protobuf.micro.CodedOutputStreamMicro output)
                        throws java.io.IOException {
      if (hasWannaJoinNum()) {
        output.writeInt32(1, getWannaJoinNum());
      }
      if (hasWannaJoinState()) {
        output.writeInt32(2, getWannaJoinState());
      }
    }
    
    private int cachedSize = -1;
    @Override
    public int getCachedSize() {
      if (cachedSize < 0) {
        // getSerializedSize sets cachedSize
        getSerializedSize();
      }
      return cachedSize;
    }
    
    @Override
    public int getSerializedSize() {
      int size = 0;
      if (hasWannaJoinNum()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeInt32Size(1, getWannaJoinNum());
      }
      if (hasWannaJoinState()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeInt32Size(2, getWannaJoinState());
      }
      cachedSize = size;
      return size;
    }
    
    @Override
    public WannaJoinResponse mergeFrom(
        com.google.protobuf.micro.CodedInputStreamMicro input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            setWannaJoinNum(input.readInt32());
            break;
          }
          case 16: {
            setWannaJoinState(input.readInt32());
            break;
          }
        }
      }
    }
    
    public static WannaJoinResponse parseFrom(byte[] data)
        throws com.google.protobuf.micro.InvalidProtocolBufferMicroException {
      return (WannaJoinResponse) (new WannaJoinResponse().mergeFrom(data));
    }
    
    public static WannaJoinResponse parseFrom(
            com.google.protobuf.micro.CodedInputStreamMicro input)
        throws java.io.IOException {
      return new WannaJoinResponse().mergeFrom(input);
    }
    
  }
  
  @SuppressWarnings("hiding")
  public static final class PageResponseInfo extends
      com.google.protobuf.micro.MessageMicro {
    public PageResponseInfo() {}
    
    // required bool has_rest = 1;
    public static final int HAS_REST_FIELD_NUMBER = 1;
    private boolean hasHasRest;
    private boolean hasRest_ = false;
    public boolean getHasRest() { return hasRest_; }
    public boolean hasHasRest() { return hasHasRest; }
    public PageResponseInfo setHasRest(boolean value) {
      hasHasRest = true;
      hasRest_ = value;
      return this;
    }
    public PageResponseInfo clearHasRest() {
      hasHasRest = false;
      hasRest_ = false;
      return this;
    }
    
    // required int32 end_offset = 2;
    public static final int END_OFFSET_FIELD_NUMBER = 2;
    private boolean hasEndOffset;
    private int endOffset_ = 0;
    public int getEndOffset() { return endOffset_; }
    public boolean hasEndOffset() { return hasEndOffset; }
    public PageResponseInfo setEndOffset(int value) {
      hasEndOffset = true;
      endOffset_ = value;
      return this;
    }
    public PageResponseInfo clearEndOffset() {
      hasEndOffset = false;
      endOffset_ = 0;
      return this;
    }
    
    public final PageResponseInfo clear() {
      clearHasRest();
      clearEndOffset();
      cachedSize = -1;
      return this;
    }
    
    public final boolean isInitialized() {
      if (!hasHasRest) return false;
      if (!hasEndOffset) return false;
      return true;
    }
    
    @Override
    public void writeTo(com.google.protobuf.micro.CodedOutputStreamMicro output)
                        throws java.io.IOException {
      if (hasHasRest()) {
        output.writeBool(1, getHasRest());
      }
      if (hasEndOffset()) {
        output.writeInt32(2, getEndOffset());
      }
    }
    
    private int cachedSize = -1;
    @Override
    public int getCachedSize() {
      if (cachedSize < 0) {
        // getSerializedSize sets cachedSize
        getSerializedSize();
      }
      return cachedSize;
    }
    
    @Override
    public int getSerializedSize() {
      int size = 0;
      if (hasHasRest()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeBoolSize(1, getHasRest());
      }
      if (hasEndOffset()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeInt32Size(2, getEndOffset());
      }
      cachedSize = size;
      return size;
    }
    
    @Override
    public PageResponseInfo mergeFrom(
        com.google.protobuf.micro.CodedInputStreamMicro input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            setHasRest(input.readBool());
            break;
          }
          case 16: {
            setEndOffset(input.readInt32());
            break;
          }
        }
      }
    }
    
    public static PageResponseInfo parseFrom(byte[] data)
        throws com.google.protobuf.micro.InvalidProtocolBufferMicroException {
      return (PageResponseInfo) (new PageResponseInfo().mergeFrom(data));
    }
    
    public static PageResponseInfo parseFrom(
            com.google.protobuf.micro.CodedInputStreamMicro input)
        throws java.io.IOException {
      return new PageResponseInfo().mergeFrom(input);
    }
    
  }
  
  @SuppressWarnings("hiding")
  public static final class DataUpdateResponseInfo extends
      com.google.protobuf.micro.MessageMicro {
    public DataUpdateResponseInfo() {}
    
    // repeated .UpdateData update_data = 1;
    public static final int UPDATE_DATA_FIELD_NUMBER = 1;
    private java.util.List<UpdateData> updateData_ =
      java.util.Collections.emptyList();
    public java.util.List<UpdateData> getUpdateDataList() {
      return updateData_;
    }
    public int getUpdateDataCount() { return updateData_.size(); }
    public UpdateData getUpdateData(int index) {
      return updateData_.get(index);
    }
    public DataUpdateResponseInfo setUpdateData(int index, UpdateData value) {
      if (value == null) {
        throw new NullPointerException();
      }
      updateData_.set(index, value);
      return this;
    }
    public DataUpdateResponseInfo addUpdateData(UpdateData value) {
      if (value == null) {
        throw new NullPointerException();
      }
      if (updateData_.isEmpty()) {
        updateData_ = new java.util.ArrayList<UpdateData>();
      }
      updateData_.add(value);
      return this;
    }
    public DataUpdateResponseInfo clearUpdateData() {
      updateData_ = java.util.Collections.emptyList();
      return this;
    }
    
    public final DataUpdateResponseInfo clear() {
      clearUpdateData();
      cachedSize = -1;
      return this;
    }
    
    public final boolean isInitialized() {
      for (UpdateData element : getUpdateDataList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }
    
    @Override
    public void writeTo(com.google.protobuf.micro.CodedOutputStreamMicro output)
                        throws java.io.IOException {
      for (UpdateData element : getUpdateDataList()) {
        output.writeMessage(1, element);
      }
    }
    
    private int cachedSize = -1;
    @Override
    public int getCachedSize() {
      if (cachedSize < 0) {
        // getSerializedSize sets cachedSize
        getSerializedSize();
      }
      return cachedSize;
    }
    
    @Override
    public int getSerializedSize() {
      int size = 0;
      for (UpdateData element : getUpdateDataList()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeMessageSize(1, element);
      }
      cachedSize = size;
      return size;
    }
    
    @Override
    public DataUpdateResponseInfo mergeFrom(
        com.google.protobuf.micro.CodedInputStreamMicro input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            UpdateData value = new UpdateData();
            input.readMessage(value);
            addUpdateData(value);
            break;
          }
        }
      }
    }
    
    public static DataUpdateResponseInfo parseFrom(byte[] data)
        throws com.google.protobuf.micro.InvalidProtocolBufferMicroException {
      return (DataUpdateResponseInfo) (new DataUpdateResponseInfo().mergeFrom(data));
    }
    
    public static DataUpdateResponseInfo parseFrom(
            com.google.protobuf.micro.CodedInputStreamMicro input)
        throws java.io.IOException {
      return new DataUpdateResponseInfo().mergeFrom(input);
    }
    
  }
  
  @SuppressWarnings("hiding")
  public static final class UpdateData extends
      com.google.protobuf.micro.MessageMicro {
    public UpdateData() {}
    
    // required string file_name = 1;
    public static final int FILE_NAME_FIELD_NUMBER = 1;
    private boolean hasFileName;
    private String fileName_ = "";
    public String getFileName() { return fileName_; }
    public boolean hasFileName() { return hasFileName; }
    public UpdateData setFileName(String value) {
      hasFileName = true;
      fileName_ = value;
      return this;
    }
    public UpdateData clearFileName() {
      hasFileName = false;
      fileName_ = "";
      return this;
    }
    
    // required string url = 2;
    public static final int URL_FIELD_NUMBER = 2;
    private boolean hasUrl;
    private String url_ = "";
    public String getUrl() { return url_; }
    public boolean hasUrl() { return hasUrl; }
    public UpdateData setUrl(String value) {
      hasUrl = true;
      url_ = value;
      return this;
    }
    public UpdateData clearUrl() {
      hasUrl = false;
      url_ = "";
      return this;
    }
    
    public final UpdateData clear() {
      clearFileName();
      clearUrl();
      cachedSize = -1;
      return this;
    }
    
    public final boolean isInitialized() {
      if (!hasFileName) return false;
      if (!hasUrl) return false;
      return true;
    }
    
    @Override
    public void writeTo(com.google.protobuf.micro.CodedOutputStreamMicro output)
                        throws java.io.IOException {
      if (hasFileName()) {
        output.writeString(1, getFileName());
      }
      if (hasUrl()) {
        output.writeString(2, getUrl());
      }
    }
    
    private int cachedSize = -1;
    @Override
    public int getCachedSize() {
      if (cachedSize < 0) {
        // getSerializedSize sets cachedSize
        getSerializedSize();
      }
      return cachedSize;
    }
    
    @Override
    public int getSerializedSize() {
      int size = 0;
      if (hasFileName()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeStringSize(1, getFileName());
      }
      if (hasUrl()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeStringSize(2, getUrl());
      }
      cachedSize = size;
      return size;
    }
    
    @Override
    public UpdateData mergeFrom(
        com.google.protobuf.micro.CodedInputStreamMicro input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            setFileName(input.readString());
            break;
          }
          case 18: {
            setUrl(input.readString());
            break;
          }
        }
      }
    }
    
    public static UpdateData parseFrom(byte[] data)
        throws com.google.protobuf.micro.InvalidProtocolBufferMicroException {
      return (UpdateData) (new UpdateData().mergeFrom(data));
    }
    
    public static UpdateData parseFrom(
            com.google.protobuf.micro.CodedInputStreamMicro input)
        throws java.io.IOException {
      return new UpdateData().mergeFrom(input);
    }
    
  }
  
  @SuppressWarnings("hiding")
  public static final class PushMessage extends
      com.google.protobuf.micro.MessageMicro {
    public PushMessage() {}
    
    // required .PushMsgType type = 1;
    public static final int TYPE_FIELD_NUMBER = 1;
    private boolean hasType;
    private int type_ = MessageProtos.SYSTEM;
    public boolean hasType() { return hasType; }
    public int getType() { return type_; }
    public PushMessage setType(int value) {
      hasType = true;
      type_ = value;
      return this;
    }
    public PushMessage clearType() {
      hasType = false;
      type_ = MessageProtos.SYSTEM;
      return this;
    }
    
    // required string title = 2;
    public static final int TITLE_FIELD_NUMBER = 2;
    private boolean hasTitle;
    private String title_ = "";
    public String getTitle() { return title_; }
    public boolean hasTitle() { return hasTitle; }
    public PushMessage setTitle(String value) {
      hasTitle = true;
      title_ = value;
      return this;
    }
    public PushMessage clearTitle() {
      hasTitle = false;
      title_ = "";
      return this;
    }
    
    // required string content = 3;
    public static final int CONTENT_FIELD_NUMBER = 3;
    private boolean hasContent;
    private String content_ = "";
    public String getContent() { return content_; }
    public boolean hasContent() { return hasContent; }
    public PushMessage setContent(String value) {
      hasContent = true;
      content_ = value;
      return this;
    }
    public PushMessage clearContent() {
      hasContent = false;
      content_ = "";
      return this;
    }
    
    public final PushMessage clear() {
      clearType();
      clearTitle();
      clearContent();
      cachedSize = -1;
      return this;
    }
    
    public final boolean isInitialized() {
      if (!hasType) return false;
      if (!hasTitle) return false;
      if (!hasContent) return false;
      return true;
    }
    
    @Override
    public void writeTo(com.google.protobuf.micro.CodedOutputStreamMicro output)
                        throws java.io.IOException {
      if (hasType()) {
        output.writeInt32(1, getType());
      }
      if (hasTitle()) {
        output.writeString(2, getTitle());
      }
      if (hasContent()) {
        output.writeString(3, getContent());
      }
    }
    
    private int cachedSize = -1;
    @Override
    public int getCachedSize() {
      if (cachedSize < 0) {
        // getSerializedSize sets cachedSize
        getSerializedSize();
      }
      return cachedSize;
    }
    
    @Override
    public int getSerializedSize() {
      int size = 0;
      if (hasType()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeInt32Size(1, getType());
      }
      if (hasTitle()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeStringSize(2, getTitle());
      }
      if (hasContent()) {
        size += com.google.protobuf.micro.CodedOutputStreamMicro
          .computeStringSize(3, getContent());
      }
      cachedSize = size;
      return size;
    }
    
    @Override
    public PushMessage mergeFrom(
        com.google.protobuf.micro.CodedInputStreamMicro input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
              setType(input.readInt32());
            break;
          }
          case 18: {
            setTitle(input.readString());
            break;
          }
          case 26: {
            setContent(input.readString());
            break;
          }
        }
      }
    }
    
    public static PushMessage parseFrom(byte[] data)
        throws com.google.protobuf.micro.InvalidProtocolBufferMicroException {
      return (PushMessage) (new PushMessage().mergeFrom(data));
    }
    
    public static PushMessage parseFrom(
            com.google.protobuf.micro.CodedInputStreamMicro input)
        throws java.io.IOException {
      return new PushMessage().mergeFrom(input);
    }
    
  }
  
}
